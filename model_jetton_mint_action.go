/*
REST api to TON blockchain explorer

Provide access to indexed TON blockchain

API version: 2.0.0
Contact: support@tonkeeper.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tonapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the JettonMintAction type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JettonMintAction{}

// JettonMintAction struct for JettonMintAction
type JettonMintAction struct {
	Recipient AccountAddress `json:"recipient"`
	RecipientsWallet string `json:"recipients_wallet"`
	// amount in quanta of tokens
	Amount string `json:"amount"`
	Jetton JettonPreview `json:"jetton"`
}

type _JettonMintAction JettonMintAction

// NewJettonMintAction instantiates a new JettonMintAction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJettonMintAction(recipient AccountAddress, recipientsWallet string, amount string, jetton JettonPreview) *JettonMintAction {
	this := JettonMintAction{}
	this.Recipient = recipient
	this.RecipientsWallet = recipientsWallet
	this.Amount = amount
	this.Jetton = jetton
	return &this
}

// NewJettonMintActionWithDefaults instantiates a new JettonMintAction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJettonMintActionWithDefaults() *JettonMintAction {
	this := JettonMintAction{}
	return &this
}

// GetRecipient returns the Recipient field value
func (o *JettonMintAction) GetRecipient() AccountAddress {
	if o == nil {
		var ret AccountAddress
		return ret
	}

	return o.Recipient
}

// GetRecipientOk returns a tuple with the Recipient field value
// and a boolean to check if the value has been set.
func (o *JettonMintAction) GetRecipientOk() (*AccountAddress, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Recipient, true
}

// SetRecipient sets field value
func (o *JettonMintAction) SetRecipient(v AccountAddress) {
	o.Recipient = v
}

// GetRecipientsWallet returns the RecipientsWallet field value
func (o *JettonMintAction) GetRecipientsWallet() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RecipientsWallet
}

// GetRecipientsWalletOk returns a tuple with the RecipientsWallet field value
// and a boolean to check if the value has been set.
func (o *JettonMintAction) GetRecipientsWalletOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RecipientsWallet, true
}

// SetRecipientsWallet sets field value
func (o *JettonMintAction) SetRecipientsWallet(v string) {
	o.RecipientsWallet = v
}

// GetAmount returns the Amount field value
func (o *JettonMintAction) GetAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *JettonMintAction) GetAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *JettonMintAction) SetAmount(v string) {
	o.Amount = v
}

// GetJetton returns the Jetton field value
func (o *JettonMintAction) GetJetton() JettonPreview {
	if o == nil {
		var ret JettonPreview
		return ret
	}

	return o.Jetton
}

// GetJettonOk returns a tuple with the Jetton field value
// and a boolean to check if the value has been set.
func (o *JettonMintAction) GetJettonOk() (*JettonPreview, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Jetton, true
}

// SetJetton sets field value
func (o *JettonMintAction) SetJetton(v JettonPreview) {
	o.Jetton = v
}

func (o JettonMintAction) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JettonMintAction) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["recipient"] = o.Recipient
	toSerialize["recipients_wallet"] = o.RecipientsWallet
	toSerialize["amount"] = o.Amount
	toSerialize["jetton"] = o.Jetton
	return toSerialize, nil
}

func (o *JettonMintAction) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"recipient",
		"recipients_wallet",
		"amount",
		"jetton",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varJettonMintAction := _JettonMintAction{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varJettonMintAction)

	if err != nil {
		return err
	}

	*o = JettonMintAction(varJettonMintAction)

	return err
}

type NullableJettonMintAction struct {
	value *JettonMintAction
	isSet bool
}

func (v NullableJettonMintAction) Get() *JettonMintAction {
	return v.value
}

func (v *NullableJettonMintAction) Set(val *JettonMintAction) {
	v.value = val
	v.isSet = true
}

func (v NullableJettonMintAction) IsSet() bool {
	return v.isSet
}

func (v *NullableJettonMintAction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJettonMintAction(val *JettonMintAction) *NullableJettonMintAction {
	return &NullableJettonMintAction{value: val, isSet: true}
}

func (v NullableJettonMintAction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJettonMintAction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


