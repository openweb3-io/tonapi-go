/*
REST api to TON blockchain explorer

Provide access to indexed TON blockchain

API version: 2.0.0
Contact: support@tonkeeper.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tonapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SizeLimitsConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SizeLimitsConfig{}

// SizeLimitsConfig struct for SizeLimitsConfig
type SizeLimitsConfig struct {
	MaxMsgBits int64 `json:"max_msg_bits"`
	MaxMsgCells int64 `json:"max_msg_cells"`
	MaxLibraryCells int64 `json:"max_library_cells"`
	MaxVmDataDepth int32 `json:"max_vm_data_depth"`
	MaxExtMsgSize int64 `json:"max_ext_msg_size"`
	MaxExtMsgDepth int32 `json:"max_ext_msg_depth"`
	MaxAccStateCells *int64 `json:"max_acc_state_cells,omitempty"`
	MaxAccStateBits *int64 `json:"max_acc_state_bits,omitempty"`
}

type _SizeLimitsConfig SizeLimitsConfig

// NewSizeLimitsConfig instantiates a new SizeLimitsConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSizeLimitsConfig(maxMsgBits int64, maxMsgCells int64, maxLibraryCells int64, maxVmDataDepth int32, maxExtMsgSize int64, maxExtMsgDepth int32) *SizeLimitsConfig {
	this := SizeLimitsConfig{}
	this.MaxMsgBits = maxMsgBits
	this.MaxMsgCells = maxMsgCells
	this.MaxLibraryCells = maxLibraryCells
	this.MaxVmDataDepth = maxVmDataDepth
	this.MaxExtMsgSize = maxExtMsgSize
	this.MaxExtMsgDepth = maxExtMsgDepth
	return &this
}

// NewSizeLimitsConfigWithDefaults instantiates a new SizeLimitsConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSizeLimitsConfigWithDefaults() *SizeLimitsConfig {
	this := SizeLimitsConfig{}
	return &this
}

// GetMaxMsgBits returns the MaxMsgBits field value
func (o *SizeLimitsConfig) GetMaxMsgBits() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.MaxMsgBits
}

// GetMaxMsgBitsOk returns a tuple with the MaxMsgBits field value
// and a boolean to check if the value has been set.
func (o *SizeLimitsConfig) GetMaxMsgBitsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxMsgBits, true
}

// SetMaxMsgBits sets field value
func (o *SizeLimitsConfig) SetMaxMsgBits(v int64) {
	o.MaxMsgBits = v
}

// GetMaxMsgCells returns the MaxMsgCells field value
func (o *SizeLimitsConfig) GetMaxMsgCells() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.MaxMsgCells
}

// GetMaxMsgCellsOk returns a tuple with the MaxMsgCells field value
// and a boolean to check if the value has been set.
func (o *SizeLimitsConfig) GetMaxMsgCellsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxMsgCells, true
}

// SetMaxMsgCells sets field value
func (o *SizeLimitsConfig) SetMaxMsgCells(v int64) {
	o.MaxMsgCells = v
}

// GetMaxLibraryCells returns the MaxLibraryCells field value
func (o *SizeLimitsConfig) GetMaxLibraryCells() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.MaxLibraryCells
}

// GetMaxLibraryCellsOk returns a tuple with the MaxLibraryCells field value
// and a boolean to check if the value has been set.
func (o *SizeLimitsConfig) GetMaxLibraryCellsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxLibraryCells, true
}

// SetMaxLibraryCells sets field value
func (o *SizeLimitsConfig) SetMaxLibraryCells(v int64) {
	o.MaxLibraryCells = v
}

// GetMaxVmDataDepth returns the MaxVmDataDepth field value
func (o *SizeLimitsConfig) GetMaxVmDataDepth() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MaxVmDataDepth
}

// GetMaxVmDataDepthOk returns a tuple with the MaxVmDataDepth field value
// and a boolean to check if the value has been set.
func (o *SizeLimitsConfig) GetMaxVmDataDepthOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxVmDataDepth, true
}

// SetMaxVmDataDepth sets field value
func (o *SizeLimitsConfig) SetMaxVmDataDepth(v int32) {
	o.MaxVmDataDepth = v
}

// GetMaxExtMsgSize returns the MaxExtMsgSize field value
func (o *SizeLimitsConfig) GetMaxExtMsgSize() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.MaxExtMsgSize
}

// GetMaxExtMsgSizeOk returns a tuple with the MaxExtMsgSize field value
// and a boolean to check if the value has been set.
func (o *SizeLimitsConfig) GetMaxExtMsgSizeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxExtMsgSize, true
}

// SetMaxExtMsgSize sets field value
func (o *SizeLimitsConfig) SetMaxExtMsgSize(v int64) {
	o.MaxExtMsgSize = v
}

// GetMaxExtMsgDepth returns the MaxExtMsgDepth field value
func (o *SizeLimitsConfig) GetMaxExtMsgDepth() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MaxExtMsgDepth
}

// GetMaxExtMsgDepthOk returns a tuple with the MaxExtMsgDepth field value
// and a boolean to check if the value has been set.
func (o *SizeLimitsConfig) GetMaxExtMsgDepthOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxExtMsgDepth, true
}

// SetMaxExtMsgDepth sets field value
func (o *SizeLimitsConfig) SetMaxExtMsgDepth(v int32) {
	o.MaxExtMsgDepth = v
}

// GetMaxAccStateCells returns the MaxAccStateCells field value if set, zero value otherwise.
func (o *SizeLimitsConfig) GetMaxAccStateCells() int64 {
	if o == nil || IsNil(o.MaxAccStateCells) {
		var ret int64
		return ret
	}
	return *o.MaxAccStateCells
}

// GetMaxAccStateCellsOk returns a tuple with the MaxAccStateCells field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SizeLimitsConfig) GetMaxAccStateCellsOk() (*int64, bool) {
	if o == nil || IsNil(o.MaxAccStateCells) {
		return nil, false
	}
	return o.MaxAccStateCells, true
}

// HasMaxAccStateCells returns a boolean if a field has been set.
func (o *SizeLimitsConfig) HasMaxAccStateCells() bool {
	if o != nil && !IsNil(o.MaxAccStateCells) {
		return true
	}

	return false
}

// SetMaxAccStateCells gets a reference to the given int64 and assigns it to the MaxAccStateCells field.
func (o *SizeLimitsConfig) SetMaxAccStateCells(v int64) {
	o.MaxAccStateCells = &v
}

// GetMaxAccStateBits returns the MaxAccStateBits field value if set, zero value otherwise.
func (o *SizeLimitsConfig) GetMaxAccStateBits() int64 {
	if o == nil || IsNil(o.MaxAccStateBits) {
		var ret int64
		return ret
	}
	return *o.MaxAccStateBits
}

// GetMaxAccStateBitsOk returns a tuple with the MaxAccStateBits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SizeLimitsConfig) GetMaxAccStateBitsOk() (*int64, bool) {
	if o == nil || IsNil(o.MaxAccStateBits) {
		return nil, false
	}
	return o.MaxAccStateBits, true
}

// HasMaxAccStateBits returns a boolean if a field has been set.
func (o *SizeLimitsConfig) HasMaxAccStateBits() bool {
	if o != nil && !IsNil(o.MaxAccStateBits) {
		return true
	}

	return false
}

// SetMaxAccStateBits gets a reference to the given int64 and assigns it to the MaxAccStateBits field.
func (o *SizeLimitsConfig) SetMaxAccStateBits(v int64) {
	o.MaxAccStateBits = &v
}

func (o SizeLimitsConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SizeLimitsConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["max_msg_bits"] = o.MaxMsgBits
	toSerialize["max_msg_cells"] = o.MaxMsgCells
	toSerialize["max_library_cells"] = o.MaxLibraryCells
	toSerialize["max_vm_data_depth"] = o.MaxVmDataDepth
	toSerialize["max_ext_msg_size"] = o.MaxExtMsgSize
	toSerialize["max_ext_msg_depth"] = o.MaxExtMsgDepth
	if !IsNil(o.MaxAccStateCells) {
		toSerialize["max_acc_state_cells"] = o.MaxAccStateCells
	}
	if !IsNil(o.MaxAccStateBits) {
		toSerialize["max_acc_state_bits"] = o.MaxAccStateBits
	}
	return toSerialize, nil
}

func (o *SizeLimitsConfig) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"max_msg_bits",
		"max_msg_cells",
		"max_library_cells",
		"max_vm_data_depth",
		"max_ext_msg_size",
		"max_ext_msg_depth",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSizeLimitsConfig := _SizeLimitsConfig{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSizeLimitsConfig)

	if err != nil {
		return err
	}

	*o = SizeLimitsConfig(varSizeLimitsConfig)

	return err
}

type NullableSizeLimitsConfig struct {
	value *SizeLimitsConfig
	isSet bool
}

func (v NullableSizeLimitsConfig) Get() *SizeLimitsConfig {
	return v.value
}

func (v *NullableSizeLimitsConfig) Set(val *SizeLimitsConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableSizeLimitsConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableSizeLimitsConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSizeLimitsConfig(val *SizeLimitsConfig) *NullableSizeLimitsConfig {
	return &NullableSizeLimitsConfig{value: val, isSet: true}
}

func (v NullableSizeLimitsConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSizeLimitsConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


