/*
REST api to TON blockchain explorer

Provide access to indexed TON blockchain

API version: 2.0.0
Contact: support@tonkeeper.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tonapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TonConnectProofRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TonConnectProofRequest{}

// TonConnectProofRequest struct for TonConnectProofRequest
type TonConnectProofRequest struct {
	Address string `json:"address"`
	Proof TonConnectProofRequestProof `json:"proof"`
}

type _TonConnectProofRequest TonConnectProofRequest

// NewTonConnectProofRequest instantiates a new TonConnectProofRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTonConnectProofRequest(address string, proof TonConnectProofRequestProof) *TonConnectProofRequest {
	this := TonConnectProofRequest{}
	this.Address = address
	this.Proof = proof
	return &this
}

// NewTonConnectProofRequestWithDefaults instantiates a new TonConnectProofRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTonConnectProofRequestWithDefaults() *TonConnectProofRequest {
	this := TonConnectProofRequest{}
	return &this
}

// GetAddress returns the Address field value
func (o *TonConnectProofRequest) GetAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *TonConnectProofRequest) GetAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *TonConnectProofRequest) SetAddress(v string) {
	o.Address = v
}

// GetProof returns the Proof field value
func (o *TonConnectProofRequest) GetProof() TonConnectProofRequestProof {
	if o == nil {
		var ret TonConnectProofRequestProof
		return ret
	}

	return o.Proof
}

// GetProofOk returns a tuple with the Proof field value
// and a boolean to check if the value has been set.
func (o *TonConnectProofRequest) GetProofOk() (*TonConnectProofRequestProof, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Proof, true
}

// SetProof sets field value
func (o *TonConnectProofRequest) SetProof(v TonConnectProofRequestProof) {
	o.Proof = v
}

func (o TonConnectProofRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TonConnectProofRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["address"] = o.Address
	toSerialize["proof"] = o.Proof
	return toSerialize, nil
}

func (o *TonConnectProofRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"address",
		"proof",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTonConnectProofRequest := _TonConnectProofRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTonConnectProofRequest)

	if err != nil {
		return err
	}

	*o = TonConnectProofRequest(varTonConnectProofRequest)

	return err
}

type NullableTonConnectProofRequest struct {
	value *TonConnectProofRequest
	isSet bool
}

func (v NullableTonConnectProofRequest) Get() *TonConnectProofRequest {
	return v.value
}

func (v *NullableTonConnectProofRequest) Set(val *TonConnectProofRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTonConnectProofRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTonConnectProofRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTonConnectProofRequest(val *TonConnectProofRequest) *NullableTonConnectProofRequest {
	return &NullableTonConnectProofRequest{value: val, isSet: true}
}

func (v NullableTonConnectProofRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTonConnectProofRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


