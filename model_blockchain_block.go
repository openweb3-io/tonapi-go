/*
REST api to TON blockchain explorer

Provide access to indexed TON blockchain

API version: 2.0.0
Contact: support@tonkeeper.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tonapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BlockchainBlock type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BlockchainBlock{}

// BlockchainBlock struct for BlockchainBlock
type BlockchainBlock struct {
	TxQuantity int32 `json:"tx_quantity"`
	ValueFlow BlockValueFlow `json:"value_flow"`
	WorkchainId int32 `json:"workchain_id"`
	Shard string `json:"shard"`
	Seqno int32 `json:"seqno"`
	RootHash string `json:"root_hash"`
	FileHash string `json:"file_hash"`
	GlobalId int32 `json:"global_id"`
	Version int32 `json:"version"`
	AfterMerge bool `json:"after_merge"`
	BeforeSplit bool `json:"before_split"`
	AfterSplit bool `json:"after_split"`
	WantSplit bool `json:"want_split"`
	WantMerge bool `json:"want_merge"`
	KeyBlock bool `json:"key_block"`
	GenUtime int64 `json:"gen_utime"`
	StartLt int64 `json:"start_lt"`
	EndLt int64 `json:"end_lt"`
	VertSeqno int32 `json:"vert_seqno"`
	GenCatchainSeqno int32 `json:"gen_catchain_seqno"`
	MinRefMcSeqno int32 `json:"min_ref_mc_seqno"`
	PrevKeyBlockSeqno int32 `json:"prev_key_block_seqno"`
	GenSoftwareVersion *int32 `json:"gen_software_version,omitempty"`
	GenSoftwareCapabilities *int64 `json:"gen_software_capabilities,omitempty"`
	MasterRef *string `json:"master_ref,omitempty"`
	PrevRefs []string `json:"prev_refs"`
	InMsgDescrLength int64 `json:"in_msg_descr_length"`
	OutMsgDescrLength int64 `json:"out_msg_descr_length"`
	RandSeed string `json:"rand_seed"`
	CreatedBy string `json:"created_by"`
}

type _BlockchainBlock BlockchainBlock

// NewBlockchainBlock instantiates a new BlockchainBlock object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlockchainBlock(txQuantity int32, valueFlow BlockValueFlow, workchainId int32, shard string, seqno int32, rootHash string, fileHash string, globalId int32, version int32, afterMerge bool, beforeSplit bool, afterSplit bool, wantSplit bool, wantMerge bool, keyBlock bool, genUtime int64, startLt int64, endLt int64, vertSeqno int32, genCatchainSeqno int32, minRefMcSeqno int32, prevKeyBlockSeqno int32, prevRefs []string, inMsgDescrLength int64, outMsgDescrLength int64, randSeed string, createdBy string) *BlockchainBlock {
	this := BlockchainBlock{}
	this.TxQuantity = txQuantity
	this.ValueFlow = valueFlow
	this.WorkchainId = workchainId
	this.Shard = shard
	this.Seqno = seqno
	this.RootHash = rootHash
	this.FileHash = fileHash
	this.GlobalId = globalId
	this.Version = version
	this.AfterMerge = afterMerge
	this.BeforeSplit = beforeSplit
	this.AfterSplit = afterSplit
	this.WantSplit = wantSplit
	this.WantMerge = wantMerge
	this.KeyBlock = keyBlock
	this.GenUtime = genUtime
	this.StartLt = startLt
	this.EndLt = endLt
	this.VertSeqno = vertSeqno
	this.GenCatchainSeqno = genCatchainSeqno
	this.MinRefMcSeqno = minRefMcSeqno
	this.PrevKeyBlockSeqno = prevKeyBlockSeqno
	this.PrevRefs = prevRefs
	this.InMsgDescrLength = inMsgDescrLength
	this.OutMsgDescrLength = outMsgDescrLength
	this.RandSeed = randSeed
	this.CreatedBy = createdBy
	return &this
}

// NewBlockchainBlockWithDefaults instantiates a new BlockchainBlock object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlockchainBlockWithDefaults() *BlockchainBlock {
	this := BlockchainBlock{}
	return &this
}

// GetTxQuantity returns the TxQuantity field value
func (o *BlockchainBlock) GetTxQuantity() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TxQuantity
}

// GetTxQuantityOk returns a tuple with the TxQuantity field value
// and a boolean to check if the value has been set.
func (o *BlockchainBlock) GetTxQuantityOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TxQuantity, true
}

// SetTxQuantity sets field value
func (o *BlockchainBlock) SetTxQuantity(v int32) {
	o.TxQuantity = v
}

// GetValueFlow returns the ValueFlow field value
func (o *BlockchainBlock) GetValueFlow() BlockValueFlow {
	if o == nil {
		var ret BlockValueFlow
		return ret
	}

	return o.ValueFlow
}

// GetValueFlowOk returns a tuple with the ValueFlow field value
// and a boolean to check if the value has been set.
func (o *BlockchainBlock) GetValueFlowOk() (*BlockValueFlow, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ValueFlow, true
}

// SetValueFlow sets field value
func (o *BlockchainBlock) SetValueFlow(v BlockValueFlow) {
	o.ValueFlow = v
}

// GetWorkchainId returns the WorkchainId field value
func (o *BlockchainBlock) GetWorkchainId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.WorkchainId
}

// GetWorkchainIdOk returns a tuple with the WorkchainId field value
// and a boolean to check if the value has been set.
func (o *BlockchainBlock) GetWorkchainIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WorkchainId, true
}

// SetWorkchainId sets field value
func (o *BlockchainBlock) SetWorkchainId(v int32) {
	o.WorkchainId = v
}

// GetShard returns the Shard field value
func (o *BlockchainBlock) GetShard() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Shard
}

// GetShardOk returns a tuple with the Shard field value
// and a boolean to check if the value has been set.
func (o *BlockchainBlock) GetShardOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Shard, true
}

// SetShard sets field value
func (o *BlockchainBlock) SetShard(v string) {
	o.Shard = v
}

// GetSeqno returns the Seqno field value
func (o *BlockchainBlock) GetSeqno() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Seqno
}

// GetSeqnoOk returns a tuple with the Seqno field value
// and a boolean to check if the value has been set.
func (o *BlockchainBlock) GetSeqnoOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Seqno, true
}

// SetSeqno sets field value
func (o *BlockchainBlock) SetSeqno(v int32) {
	o.Seqno = v
}

// GetRootHash returns the RootHash field value
func (o *BlockchainBlock) GetRootHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RootHash
}

// GetRootHashOk returns a tuple with the RootHash field value
// and a boolean to check if the value has been set.
func (o *BlockchainBlock) GetRootHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RootHash, true
}

// SetRootHash sets field value
func (o *BlockchainBlock) SetRootHash(v string) {
	o.RootHash = v
}

// GetFileHash returns the FileHash field value
func (o *BlockchainBlock) GetFileHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FileHash
}

// GetFileHashOk returns a tuple with the FileHash field value
// and a boolean to check if the value has been set.
func (o *BlockchainBlock) GetFileHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FileHash, true
}

// SetFileHash sets field value
func (o *BlockchainBlock) SetFileHash(v string) {
	o.FileHash = v
}

// GetGlobalId returns the GlobalId field value
func (o *BlockchainBlock) GetGlobalId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.GlobalId
}

// GetGlobalIdOk returns a tuple with the GlobalId field value
// and a boolean to check if the value has been set.
func (o *BlockchainBlock) GetGlobalIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GlobalId, true
}

// SetGlobalId sets field value
func (o *BlockchainBlock) SetGlobalId(v int32) {
	o.GlobalId = v
}

// GetVersion returns the Version field value
func (o *BlockchainBlock) GetVersion() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *BlockchainBlock) GetVersionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *BlockchainBlock) SetVersion(v int32) {
	o.Version = v
}

// GetAfterMerge returns the AfterMerge field value
func (o *BlockchainBlock) GetAfterMerge() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AfterMerge
}

// GetAfterMergeOk returns a tuple with the AfterMerge field value
// and a boolean to check if the value has been set.
func (o *BlockchainBlock) GetAfterMergeOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AfterMerge, true
}

// SetAfterMerge sets field value
func (o *BlockchainBlock) SetAfterMerge(v bool) {
	o.AfterMerge = v
}

// GetBeforeSplit returns the BeforeSplit field value
func (o *BlockchainBlock) GetBeforeSplit() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BeforeSplit
}

// GetBeforeSplitOk returns a tuple with the BeforeSplit field value
// and a boolean to check if the value has been set.
func (o *BlockchainBlock) GetBeforeSplitOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BeforeSplit, true
}

// SetBeforeSplit sets field value
func (o *BlockchainBlock) SetBeforeSplit(v bool) {
	o.BeforeSplit = v
}

// GetAfterSplit returns the AfterSplit field value
func (o *BlockchainBlock) GetAfterSplit() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AfterSplit
}

// GetAfterSplitOk returns a tuple with the AfterSplit field value
// and a boolean to check if the value has been set.
func (o *BlockchainBlock) GetAfterSplitOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AfterSplit, true
}

// SetAfterSplit sets field value
func (o *BlockchainBlock) SetAfterSplit(v bool) {
	o.AfterSplit = v
}

// GetWantSplit returns the WantSplit field value
func (o *BlockchainBlock) GetWantSplit() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.WantSplit
}

// GetWantSplitOk returns a tuple with the WantSplit field value
// and a boolean to check if the value has been set.
func (o *BlockchainBlock) GetWantSplitOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WantSplit, true
}

// SetWantSplit sets field value
func (o *BlockchainBlock) SetWantSplit(v bool) {
	o.WantSplit = v
}

// GetWantMerge returns the WantMerge field value
func (o *BlockchainBlock) GetWantMerge() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.WantMerge
}

// GetWantMergeOk returns a tuple with the WantMerge field value
// and a boolean to check if the value has been set.
func (o *BlockchainBlock) GetWantMergeOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WantMerge, true
}

// SetWantMerge sets field value
func (o *BlockchainBlock) SetWantMerge(v bool) {
	o.WantMerge = v
}

// GetKeyBlock returns the KeyBlock field value
func (o *BlockchainBlock) GetKeyBlock() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.KeyBlock
}

// GetKeyBlockOk returns a tuple with the KeyBlock field value
// and a boolean to check if the value has been set.
func (o *BlockchainBlock) GetKeyBlockOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KeyBlock, true
}

// SetKeyBlock sets field value
func (o *BlockchainBlock) SetKeyBlock(v bool) {
	o.KeyBlock = v
}

// GetGenUtime returns the GenUtime field value
func (o *BlockchainBlock) GetGenUtime() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.GenUtime
}

// GetGenUtimeOk returns a tuple with the GenUtime field value
// and a boolean to check if the value has been set.
func (o *BlockchainBlock) GetGenUtimeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GenUtime, true
}

// SetGenUtime sets field value
func (o *BlockchainBlock) SetGenUtime(v int64) {
	o.GenUtime = v
}

// GetStartLt returns the StartLt field value
func (o *BlockchainBlock) GetStartLt() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.StartLt
}

// GetStartLtOk returns a tuple with the StartLt field value
// and a boolean to check if the value has been set.
func (o *BlockchainBlock) GetStartLtOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartLt, true
}

// SetStartLt sets field value
func (o *BlockchainBlock) SetStartLt(v int64) {
	o.StartLt = v
}

// GetEndLt returns the EndLt field value
func (o *BlockchainBlock) GetEndLt() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.EndLt
}

// GetEndLtOk returns a tuple with the EndLt field value
// and a boolean to check if the value has been set.
func (o *BlockchainBlock) GetEndLtOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndLt, true
}

// SetEndLt sets field value
func (o *BlockchainBlock) SetEndLt(v int64) {
	o.EndLt = v
}

// GetVertSeqno returns the VertSeqno field value
func (o *BlockchainBlock) GetVertSeqno() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.VertSeqno
}

// GetVertSeqnoOk returns a tuple with the VertSeqno field value
// and a boolean to check if the value has been set.
func (o *BlockchainBlock) GetVertSeqnoOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VertSeqno, true
}

// SetVertSeqno sets field value
func (o *BlockchainBlock) SetVertSeqno(v int32) {
	o.VertSeqno = v
}

// GetGenCatchainSeqno returns the GenCatchainSeqno field value
func (o *BlockchainBlock) GetGenCatchainSeqno() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.GenCatchainSeqno
}

// GetGenCatchainSeqnoOk returns a tuple with the GenCatchainSeqno field value
// and a boolean to check if the value has been set.
func (o *BlockchainBlock) GetGenCatchainSeqnoOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GenCatchainSeqno, true
}

// SetGenCatchainSeqno sets field value
func (o *BlockchainBlock) SetGenCatchainSeqno(v int32) {
	o.GenCatchainSeqno = v
}

// GetMinRefMcSeqno returns the MinRefMcSeqno field value
func (o *BlockchainBlock) GetMinRefMcSeqno() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MinRefMcSeqno
}

// GetMinRefMcSeqnoOk returns a tuple with the MinRefMcSeqno field value
// and a boolean to check if the value has been set.
func (o *BlockchainBlock) GetMinRefMcSeqnoOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MinRefMcSeqno, true
}

// SetMinRefMcSeqno sets field value
func (o *BlockchainBlock) SetMinRefMcSeqno(v int32) {
	o.MinRefMcSeqno = v
}

// GetPrevKeyBlockSeqno returns the PrevKeyBlockSeqno field value
func (o *BlockchainBlock) GetPrevKeyBlockSeqno() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PrevKeyBlockSeqno
}

// GetPrevKeyBlockSeqnoOk returns a tuple with the PrevKeyBlockSeqno field value
// and a boolean to check if the value has been set.
func (o *BlockchainBlock) GetPrevKeyBlockSeqnoOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PrevKeyBlockSeqno, true
}

// SetPrevKeyBlockSeqno sets field value
func (o *BlockchainBlock) SetPrevKeyBlockSeqno(v int32) {
	o.PrevKeyBlockSeqno = v
}

// GetGenSoftwareVersion returns the GenSoftwareVersion field value if set, zero value otherwise.
func (o *BlockchainBlock) GetGenSoftwareVersion() int32 {
	if o == nil || IsNil(o.GenSoftwareVersion) {
		var ret int32
		return ret
	}
	return *o.GenSoftwareVersion
}

// GetGenSoftwareVersionOk returns a tuple with the GenSoftwareVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockchainBlock) GetGenSoftwareVersionOk() (*int32, bool) {
	if o == nil || IsNil(o.GenSoftwareVersion) {
		return nil, false
	}
	return o.GenSoftwareVersion, true
}

// HasGenSoftwareVersion returns a boolean if a field has been set.
func (o *BlockchainBlock) HasGenSoftwareVersion() bool {
	if o != nil && !IsNil(o.GenSoftwareVersion) {
		return true
	}

	return false
}

// SetGenSoftwareVersion gets a reference to the given int32 and assigns it to the GenSoftwareVersion field.
func (o *BlockchainBlock) SetGenSoftwareVersion(v int32) {
	o.GenSoftwareVersion = &v
}

// GetGenSoftwareCapabilities returns the GenSoftwareCapabilities field value if set, zero value otherwise.
func (o *BlockchainBlock) GetGenSoftwareCapabilities() int64 {
	if o == nil || IsNil(o.GenSoftwareCapabilities) {
		var ret int64
		return ret
	}
	return *o.GenSoftwareCapabilities
}

// GetGenSoftwareCapabilitiesOk returns a tuple with the GenSoftwareCapabilities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockchainBlock) GetGenSoftwareCapabilitiesOk() (*int64, bool) {
	if o == nil || IsNil(o.GenSoftwareCapabilities) {
		return nil, false
	}
	return o.GenSoftwareCapabilities, true
}

// HasGenSoftwareCapabilities returns a boolean if a field has been set.
func (o *BlockchainBlock) HasGenSoftwareCapabilities() bool {
	if o != nil && !IsNil(o.GenSoftwareCapabilities) {
		return true
	}

	return false
}

// SetGenSoftwareCapabilities gets a reference to the given int64 and assigns it to the GenSoftwareCapabilities field.
func (o *BlockchainBlock) SetGenSoftwareCapabilities(v int64) {
	o.GenSoftwareCapabilities = &v
}

// GetMasterRef returns the MasterRef field value if set, zero value otherwise.
func (o *BlockchainBlock) GetMasterRef() string {
	if o == nil || IsNil(o.MasterRef) {
		var ret string
		return ret
	}
	return *o.MasterRef
}

// GetMasterRefOk returns a tuple with the MasterRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockchainBlock) GetMasterRefOk() (*string, bool) {
	if o == nil || IsNil(o.MasterRef) {
		return nil, false
	}
	return o.MasterRef, true
}

// HasMasterRef returns a boolean if a field has been set.
func (o *BlockchainBlock) HasMasterRef() bool {
	if o != nil && !IsNil(o.MasterRef) {
		return true
	}

	return false
}

// SetMasterRef gets a reference to the given string and assigns it to the MasterRef field.
func (o *BlockchainBlock) SetMasterRef(v string) {
	o.MasterRef = &v
}

// GetPrevRefs returns the PrevRefs field value
func (o *BlockchainBlock) GetPrevRefs() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.PrevRefs
}

// GetPrevRefsOk returns a tuple with the PrevRefs field value
// and a boolean to check if the value has been set.
func (o *BlockchainBlock) GetPrevRefsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PrevRefs, true
}

// SetPrevRefs sets field value
func (o *BlockchainBlock) SetPrevRefs(v []string) {
	o.PrevRefs = v
}

// GetInMsgDescrLength returns the InMsgDescrLength field value
func (o *BlockchainBlock) GetInMsgDescrLength() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.InMsgDescrLength
}

// GetInMsgDescrLengthOk returns a tuple with the InMsgDescrLength field value
// and a boolean to check if the value has been set.
func (o *BlockchainBlock) GetInMsgDescrLengthOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InMsgDescrLength, true
}

// SetInMsgDescrLength sets field value
func (o *BlockchainBlock) SetInMsgDescrLength(v int64) {
	o.InMsgDescrLength = v
}

// GetOutMsgDescrLength returns the OutMsgDescrLength field value
func (o *BlockchainBlock) GetOutMsgDescrLength() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.OutMsgDescrLength
}

// GetOutMsgDescrLengthOk returns a tuple with the OutMsgDescrLength field value
// and a boolean to check if the value has been set.
func (o *BlockchainBlock) GetOutMsgDescrLengthOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OutMsgDescrLength, true
}

// SetOutMsgDescrLength sets field value
func (o *BlockchainBlock) SetOutMsgDescrLength(v int64) {
	o.OutMsgDescrLength = v
}

// GetRandSeed returns the RandSeed field value
func (o *BlockchainBlock) GetRandSeed() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RandSeed
}

// GetRandSeedOk returns a tuple with the RandSeed field value
// and a boolean to check if the value has been set.
func (o *BlockchainBlock) GetRandSeedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RandSeed, true
}

// SetRandSeed sets field value
func (o *BlockchainBlock) SetRandSeed(v string) {
	o.RandSeed = v
}

// GetCreatedBy returns the CreatedBy field value
func (o *BlockchainBlock) GetCreatedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value
// and a boolean to check if the value has been set.
func (o *BlockchainBlock) GetCreatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// SetCreatedBy sets field value
func (o *BlockchainBlock) SetCreatedBy(v string) {
	o.CreatedBy = v
}

func (o BlockchainBlock) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BlockchainBlock) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["tx_quantity"] = o.TxQuantity
	toSerialize["value_flow"] = o.ValueFlow
	toSerialize["workchain_id"] = o.WorkchainId
	toSerialize["shard"] = o.Shard
	toSerialize["seqno"] = o.Seqno
	toSerialize["root_hash"] = o.RootHash
	toSerialize["file_hash"] = o.FileHash
	toSerialize["global_id"] = o.GlobalId
	toSerialize["version"] = o.Version
	toSerialize["after_merge"] = o.AfterMerge
	toSerialize["before_split"] = o.BeforeSplit
	toSerialize["after_split"] = o.AfterSplit
	toSerialize["want_split"] = o.WantSplit
	toSerialize["want_merge"] = o.WantMerge
	toSerialize["key_block"] = o.KeyBlock
	toSerialize["gen_utime"] = o.GenUtime
	toSerialize["start_lt"] = o.StartLt
	toSerialize["end_lt"] = o.EndLt
	toSerialize["vert_seqno"] = o.VertSeqno
	toSerialize["gen_catchain_seqno"] = o.GenCatchainSeqno
	toSerialize["min_ref_mc_seqno"] = o.MinRefMcSeqno
	toSerialize["prev_key_block_seqno"] = o.PrevKeyBlockSeqno
	if !IsNil(o.GenSoftwareVersion) {
		toSerialize["gen_software_version"] = o.GenSoftwareVersion
	}
	if !IsNil(o.GenSoftwareCapabilities) {
		toSerialize["gen_software_capabilities"] = o.GenSoftwareCapabilities
	}
	if !IsNil(o.MasterRef) {
		toSerialize["master_ref"] = o.MasterRef
	}
	toSerialize["prev_refs"] = o.PrevRefs
	toSerialize["in_msg_descr_length"] = o.InMsgDescrLength
	toSerialize["out_msg_descr_length"] = o.OutMsgDescrLength
	toSerialize["rand_seed"] = o.RandSeed
	toSerialize["created_by"] = o.CreatedBy
	return toSerialize, nil
}

func (o *BlockchainBlock) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"tx_quantity",
		"value_flow",
		"workchain_id",
		"shard",
		"seqno",
		"root_hash",
		"file_hash",
		"global_id",
		"version",
		"after_merge",
		"before_split",
		"after_split",
		"want_split",
		"want_merge",
		"key_block",
		"gen_utime",
		"start_lt",
		"end_lt",
		"vert_seqno",
		"gen_catchain_seqno",
		"min_ref_mc_seqno",
		"prev_key_block_seqno",
		"prev_refs",
		"in_msg_descr_length",
		"out_msg_descr_length",
		"rand_seed",
		"created_by",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBlockchainBlock := _BlockchainBlock{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBlockchainBlock)

	if err != nil {
		return err
	}

	*o = BlockchainBlock(varBlockchainBlock)

	return err
}

type NullableBlockchainBlock struct {
	value *BlockchainBlock
	isSet bool
}

func (v NullableBlockchainBlock) Get() *BlockchainBlock {
	return v.value
}

func (v *NullableBlockchainBlock) Set(val *BlockchainBlock) {
	v.value = val
	v.isSet = true
}

func (v NullableBlockchainBlock) IsSet() bool {
	return v.isSet
}

func (v *NullableBlockchainBlock) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlockchainBlock(val *BlockchainBlock) *NullableBlockchainBlock {
	return &NullableBlockchainBlock{value: val, isSet: true}
}

func (v NullableBlockchainBlock) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlockchainBlock) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


