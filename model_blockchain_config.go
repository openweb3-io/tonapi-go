/*
REST api to TON blockchain explorer

Provide access to indexed TON blockchain

API version: 2.0.0
Contact: support@tonkeeper.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tonapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BlockchainConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BlockchainConfig{}

// BlockchainConfig struct for BlockchainConfig
type BlockchainConfig struct {
	// config boc in base64 format
	Raw string `json:"raw"`
	// config address
	Var0 string `json:"0"`
	// elector address
	Var1 string `json:"1"`
	// minter address
	Var2 string `json:"2"`
	// The address of the transaction fee collector.
	Var3 *string `json:"3,omitempty"`
	// dns root address
	Var4 string `json:"4"`
	Var5 *BlockchainConfig5 `json:"5,omitempty"`
	Var6 *BlockchainConfig6 `json:"6,omitempty"`
	Var7 *BlockchainConfig7 `json:"7,omitempty"`
	Var8 *BlockchainConfig8 `json:"8,omitempty"`
	Var9 *BlockchainConfig9 `json:"9,omitempty"`
	Var10 *BlockchainConfig10 `json:"10,omitempty"`
	Var11 *BlockchainConfig11 `json:"11,omitempty"`
	Var12 *BlockchainConfig12 `json:"12,omitempty"`
	Var13 *BlockchainConfig13 `json:"13,omitempty"`
	Var14 *BlockchainConfig14 `json:"14,omitempty"`
	Var15 *BlockchainConfig15 `json:"15,omitempty"`
	Var16 *BlockchainConfig16 `json:"16,omitempty"`
	Var17 *BlockchainConfig17 `json:"17,omitempty"`
	Var18 *BlockchainConfig18 `json:"18,omitempty"`
	Var20 *BlockchainConfig20 `json:"20,omitempty"`
	Var21 *BlockchainConfig21 `json:"21,omitempty"`
	Var22 *BlockchainConfig22 `json:"22,omitempty"`
	Var23 *BlockchainConfig23 `json:"23,omitempty"`
	Var24 *BlockchainConfig24 `json:"24,omitempty"`
	Var25 *BlockchainConfig25 `json:"25,omitempty"`
	Var28 *BlockchainConfig28 `json:"28,omitempty"`
	Var29 *BlockchainConfig29 `json:"29,omitempty"`
	Var31 *BlockchainConfig31 `json:"31,omitempty"`
	Var32 *ValidatorsSet `json:"32,omitempty"`
	Var33 *ValidatorsSet `json:"33,omitempty"`
	Var34 *ValidatorsSet `json:"34,omitempty"`
	Var35 *ValidatorsSet `json:"35,omitempty"`
	Var36 *ValidatorsSet `json:"36,omitempty"`
	Var37 *ValidatorsSet `json:"37,omitempty"`
	Var40 *BlockchainConfig40 `json:"40,omitempty"`
	Var43 *BlockchainConfig43 `json:"43,omitempty"`
	Var44 BlockchainConfig44 `json:"44"`
	Var71 *BlockchainConfig71 `json:"71,omitempty"`
	Var72 *BlockchainConfig71 `json:"72,omitempty"`
	Var73 *BlockchainConfig71 `json:"73,omitempty"`
	Var79 *BlockchainConfig79 `json:"79,omitempty"`
	Var81 *BlockchainConfig79 `json:"81,omitempty"`
	Var82 *BlockchainConfig79 `json:"82,omitempty"`
}

type _BlockchainConfig BlockchainConfig

// NewBlockchainConfig instantiates a new BlockchainConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlockchainConfig(raw string, var0 string, var1 string, var2 string, var4 string, var44 BlockchainConfig44) *BlockchainConfig {
	this := BlockchainConfig{}
	this.Raw = raw
	this.Var0 = var0
	this.Var1 = var1
	this.Var2 = var2
	this.Var4 = var4
	this.Var44 = var44
	return &this
}

// NewBlockchainConfigWithDefaults instantiates a new BlockchainConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlockchainConfigWithDefaults() *BlockchainConfig {
	this := BlockchainConfig{}
	return &this
}

// GetRaw returns the Raw field value
func (o *BlockchainConfig) GetRaw() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Raw
}

// GetRawOk returns a tuple with the Raw field value
// and a boolean to check if the value has been set.
func (o *BlockchainConfig) GetRawOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Raw, true
}

// SetRaw sets field value
func (o *BlockchainConfig) SetRaw(v string) {
	o.Raw = v
}

// GetVar0 returns the Var0 field value
func (o *BlockchainConfig) GetVar0() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Var0
}

// GetVar0Ok returns a tuple with the Var0 field value
// and a boolean to check if the value has been set.
func (o *BlockchainConfig) GetVar0Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Var0, true
}

// SetVar0 sets field value
func (o *BlockchainConfig) SetVar0(v string) {
	o.Var0 = v
}

// GetVar1 returns the Var1 field value
func (o *BlockchainConfig) GetVar1() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Var1
}

// GetVar1Ok returns a tuple with the Var1 field value
// and a boolean to check if the value has been set.
func (o *BlockchainConfig) GetVar1Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Var1, true
}

// SetVar1 sets field value
func (o *BlockchainConfig) SetVar1(v string) {
	o.Var1 = v
}

// GetVar2 returns the Var2 field value
func (o *BlockchainConfig) GetVar2() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Var2
}

// GetVar2Ok returns a tuple with the Var2 field value
// and a boolean to check if the value has been set.
func (o *BlockchainConfig) GetVar2Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Var2, true
}

// SetVar2 sets field value
func (o *BlockchainConfig) SetVar2(v string) {
	o.Var2 = v
}

// GetVar3 returns the Var3 field value if set, zero value otherwise.
func (o *BlockchainConfig) GetVar3() string {
	if o == nil || IsNil(o.Var3) {
		var ret string
		return ret
	}
	return *o.Var3
}

// GetVar3Ok returns a tuple with the Var3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockchainConfig) GetVar3Ok() (*string, bool) {
	if o == nil || IsNil(o.Var3) {
		return nil, false
	}
	return o.Var3, true
}

// HasVar3 returns a boolean if a field has been set.
func (o *BlockchainConfig) HasVar3() bool {
	if o != nil && !IsNil(o.Var3) {
		return true
	}

	return false
}

// SetVar3 gets a reference to the given string and assigns it to the Var3 field.
func (o *BlockchainConfig) SetVar3(v string) {
	o.Var3 = &v
}

// GetVar4 returns the Var4 field value
func (o *BlockchainConfig) GetVar4() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Var4
}

// GetVar4Ok returns a tuple with the Var4 field value
// and a boolean to check if the value has been set.
func (o *BlockchainConfig) GetVar4Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Var4, true
}

// SetVar4 sets field value
func (o *BlockchainConfig) SetVar4(v string) {
	o.Var4 = v
}

// GetVar5 returns the Var5 field value if set, zero value otherwise.
func (o *BlockchainConfig) GetVar5() BlockchainConfig5 {
	if o == nil || IsNil(o.Var5) {
		var ret BlockchainConfig5
		return ret
	}
	return *o.Var5
}

// GetVar5Ok returns a tuple with the Var5 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockchainConfig) GetVar5Ok() (*BlockchainConfig5, bool) {
	if o == nil || IsNil(o.Var5) {
		return nil, false
	}
	return o.Var5, true
}

// HasVar5 returns a boolean if a field has been set.
func (o *BlockchainConfig) HasVar5() bool {
	if o != nil && !IsNil(o.Var5) {
		return true
	}

	return false
}

// SetVar5 gets a reference to the given BlockchainConfig5 and assigns it to the Var5 field.
func (o *BlockchainConfig) SetVar5(v BlockchainConfig5) {
	o.Var5 = &v
}

// GetVar6 returns the Var6 field value if set, zero value otherwise.
func (o *BlockchainConfig) GetVar6() BlockchainConfig6 {
	if o == nil || IsNil(o.Var6) {
		var ret BlockchainConfig6
		return ret
	}
	return *o.Var6
}

// GetVar6Ok returns a tuple with the Var6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockchainConfig) GetVar6Ok() (*BlockchainConfig6, bool) {
	if o == nil || IsNil(o.Var6) {
		return nil, false
	}
	return o.Var6, true
}

// HasVar6 returns a boolean if a field has been set.
func (o *BlockchainConfig) HasVar6() bool {
	if o != nil && !IsNil(o.Var6) {
		return true
	}

	return false
}

// SetVar6 gets a reference to the given BlockchainConfig6 and assigns it to the Var6 field.
func (o *BlockchainConfig) SetVar6(v BlockchainConfig6) {
	o.Var6 = &v
}

// GetVar7 returns the Var7 field value if set, zero value otherwise.
func (o *BlockchainConfig) GetVar7() BlockchainConfig7 {
	if o == nil || IsNil(o.Var7) {
		var ret BlockchainConfig7
		return ret
	}
	return *o.Var7
}

// GetVar7Ok returns a tuple with the Var7 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockchainConfig) GetVar7Ok() (*BlockchainConfig7, bool) {
	if o == nil || IsNil(o.Var7) {
		return nil, false
	}
	return o.Var7, true
}

// HasVar7 returns a boolean if a field has been set.
func (o *BlockchainConfig) HasVar7() bool {
	if o != nil && !IsNil(o.Var7) {
		return true
	}

	return false
}

// SetVar7 gets a reference to the given BlockchainConfig7 and assigns it to the Var7 field.
func (o *BlockchainConfig) SetVar7(v BlockchainConfig7) {
	o.Var7 = &v
}

// GetVar8 returns the Var8 field value if set, zero value otherwise.
func (o *BlockchainConfig) GetVar8() BlockchainConfig8 {
	if o == nil || IsNil(o.Var8) {
		var ret BlockchainConfig8
		return ret
	}
	return *o.Var8
}

// GetVar8Ok returns a tuple with the Var8 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockchainConfig) GetVar8Ok() (*BlockchainConfig8, bool) {
	if o == nil || IsNil(o.Var8) {
		return nil, false
	}
	return o.Var8, true
}

// HasVar8 returns a boolean if a field has been set.
func (o *BlockchainConfig) HasVar8() bool {
	if o != nil && !IsNil(o.Var8) {
		return true
	}

	return false
}

// SetVar8 gets a reference to the given BlockchainConfig8 and assigns it to the Var8 field.
func (o *BlockchainConfig) SetVar8(v BlockchainConfig8) {
	o.Var8 = &v
}

// GetVar9 returns the Var9 field value if set, zero value otherwise.
func (o *BlockchainConfig) GetVar9() BlockchainConfig9 {
	if o == nil || IsNil(o.Var9) {
		var ret BlockchainConfig9
		return ret
	}
	return *o.Var9
}

// GetVar9Ok returns a tuple with the Var9 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockchainConfig) GetVar9Ok() (*BlockchainConfig9, bool) {
	if o == nil || IsNil(o.Var9) {
		return nil, false
	}
	return o.Var9, true
}

// HasVar9 returns a boolean if a field has been set.
func (o *BlockchainConfig) HasVar9() bool {
	if o != nil && !IsNil(o.Var9) {
		return true
	}

	return false
}

// SetVar9 gets a reference to the given BlockchainConfig9 and assigns it to the Var9 field.
func (o *BlockchainConfig) SetVar9(v BlockchainConfig9) {
	o.Var9 = &v
}

// GetVar10 returns the Var10 field value if set, zero value otherwise.
func (o *BlockchainConfig) GetVar10() BlockchainConfig10 {
	if o == nil || IsNil(o.Var10) {
		var ret BlockchainConfig10
		return ret
	}
	return *o.Var10
}

// GetVar10Ok returns a tuple with the Var10 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockchainConfig) GetVar10Ok() (*BlockchainConfig10, bool) {
	if o == nil || IsNil(o.Var10) {
		return nil, false
	}
	return o.Var10, true
}

// HasVar10 returns a boolean if a field has been set.
func (o *BlockchainConfig) HasVar10() bool {
	if o != nil && !IsNil(o.Var10) {
		return true
	}

	return false
}

// SetVar10 gets a reference to the given BlockchainConfig10 and assigns it to the Var10 field.
func (o *BlockchainConfig) SetVar10(v BlockchainConfig10) {
	o.Var10 = &v
}

// GetVar11 returns the Var11 field value if set, zero value otherwise.
func (o *BlockchainConfig) GetVar11() BlockchainConfig11 {
	if o == nil || IsNil(o.Var11) {
		var ret BlockchainConfig11
		return ret
	}
	return *o.Var11
}

// GetVar11Ok returns a tuple with the Var11 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockchainConfig) GetVar11Ok() (*BlockchainConfig11, bool) {
	if o == nil || IsNil(o.Var11) {
		return nil, false
	}
	return o.Var11, true
}

// HasVar11 returns a boolean if a field has been set.
func (o *BlockchainConfig) HasVar11() bool {
	if o != nil && !IsNil(o.Var11) {
		return true
	}

	return false
}

// SetVar11 gets a reference to the given BlockchainConfig11 and assigns it to the Var11 field.
func (o *BlockchainConfig) SetVar11(v BlockchainConfig11) {
	o.Var11 = &v
}

// GetVar12 returns the Var12 field value if set, zero value otherwise.
func (o *BlockchainConfig) GetVar12() BlockchainConfig12 {
	if o == nil || IsNil(o.Var12) {
		var ret BlockchainConfig12
		return ret
	}
	return *o.Var12
}

// GetVar12Ok returns a tuple with the Var12 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockchainConfig) GetVar12Ok() (*BlockchainConfig12, bool) {
	if o == nil || IsNil(o.Var12) {
		return nil, false
	}
	return o.Var12, true
}

// HasVar12 returns a boolean if a field has been set.
func (o *BlockchainConfig) HasVar12() bool {
	if o != nil && !IsNil(o.Var12) {
		return true
	}

	return false
}

// SetVar12 gets a reference to the given BlockchainConfig12 and assigns it to the Var12 field.
func (o *BlockchainConfig) SetVar12(v BlockchainConfig12) {
	o.Var12 = &v
}

// GetVar13 returns the Var13 field value if set, zero value otherwise.
func (o *BlockchainConfig) GetVar13() BlockchainConfig13 {
	if o == nil || IsNil(o.Var13) {
		var ret BlockchainConfig13
		return ret
	}
	return *o.Var13
}

// GetVar13Ok returns a tuple with the Var13 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockchainConfig) GetVar13Ok() (*BlockchainConfig13, bool) {
	if o == nil || IsNil(o.Var13) {
		return nil, false
	}
	return o.Var13, true
}

// HasVar13 returns a boolean if a field has been set.
func (o *BlockchainConfig) HasVar13() bool {
	if o != nil && !IsNil(o.Var13) {
		return true
	}

	return false
}

// SetVar13 gets a reference to the given BlockchainConfig13 and assigns it to the Var13 field.
func (o *BlockchainConfig) SetVar13(v BlockchainConfig13) {
	o.Var13 = &v
}

// GetVar14 returns the Var14 field value if set, zero value otherwise.
func (o *BlockchainConfig) GetVar14() BlockchainConfig14 {
	if o == nil || IsNil(o.Var14) {
		var ret BlockchainConfig14
		return ret
	}
	return *o.Var14
}

// GetVar14Ok returns a tuple with the Var14 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockchainConfig) GetVar14Ok() (*BlockchainConfig14, bool) {
	if o == nil || IsNil(o.Var14) {
		return nil, false
	}
	return o.Var14, true
}

// HasVar14 returns a boolean if a field has been set.
func (o *BlockchainConfig) HasVar14() bool {
	if o != nil && !IsNil(o.Var14) {
		return true
	}

	return false
}

// SetVar14 gets a reference to the given BlockchainConfig14 and assigns it to the Var14 field.
func (o *BlockchainConfig) SetVar14(v BlockchainConfig14) {
	o.Var14 = &v
}

// GetVar15 returns the Var15 field value if set, zero value otherwise.
func (o *BlockchainConfig) GetVar15() BlockchainConfig15 {
	if o == nil || IsNil(o.Var15) {
		var ret BlockchainConfig15
		return ret
	}
	return *o.Var15
}

// GetVar15Ok returns a tuple with the Var15 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockchainConfig) GetVar15Ok() (*BlockchainConfig15, bool) {
	if o == nil || IsNil(o.Var15) {
		return nil, false
	}
	return o.Var15, true
}

// HasVar15 returns a boolean if a field has been set.
func (o *BlockchainConfig) HasVar15() bool {
	if o != nil && !IsNil(o.Var15) {
		return true
	}

	return false
}

// SetVar15 gets a reference to the given BlockchainConfig15 and assigns it to the Var15 field.
func (o *BlockchainConfig) SetVar15(v BlockchainConfig15) {
	o.Var15 = &v
}

// GetVar16 returns the Var16 field value if set, zero value otherwise.
func (o *BlockchainConfig) GetVar16() BlockchainConfig16 {
	if o == nil || IsNil(o.Var16) {
		var ret BlockchainConfig16
		return ret
	}
	return *o.Var16
}

// GetVar16Ok returns a tuple with the Var16 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockchainConfig) GetVar16Ok() (*BlockchainConfig16, bool) {
	if o == nil || IsNil(o.Var16) {
		return nil, false
	}
	return o.Var16, true
}

// HasVar16 returns a boolean if a field has been set.
func (o *BlockchainConfig) HasVar16() bool {
	if o != nil && !IsNil(o.Var16) {
		return true
	}

	return false
}

// SetVar16 gets a reference to the given BlockchainConfig16 and assigns it to the Var16 field.
func (o *BlockchainConfig) SetVar16(v BlockchainConfig16) {
	o.Var16 = &v
}

// GetVar17 returns the Var17 field value if set, zero value otherwise.
func (o *BlockchainConfig) GetVar17() BlockchainConfig17 {
	if o == nil || IsNil(o.Var17) {
		var ret BlockchainConfig17
		return ret
	}
	return *o.Var17
}

// GetVar17Ok returns a tuple with the Var17 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockchainConfig) GetVar17Ok() (*BlockchainConfig17, bool) {
	if o == nil || IsNil(o.Var17) {
		return nil, false
	}
	return o.Var17, true
}

// HasVar17 returns a boolean if a field has been set.
func (o *BlockchainConfig) HasVar17() bool {
	if o != nil && !IsNil(o.Var17) {
		return true
	}

	return false
}

// SetVar17 gets a reference to the given BlockchainConfig17 and assigns it to the Var17 field.
func (o *BlockchainConfig) SetVar17(v BlockchainConfig17) {
	o.Var17 = &v
}

// GetVar18 returns the Var18 field value if set, zero value otherwise.
func (o *BlockchainConfig) GetVar18() BlockchainConfig18 {
	if o == nil || IsNil(o.Var18) {
		var ret BlockchainConfig18
		return ret
	}
	return *o.Var18
}

// GetVar18Ok returns a tuple with the Var18 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockchainConfig) GetVar18Ok() (*BlockchainConfig18, bool) {
	if o == nil || IsNil(o.Var18) {
		return nil, false
	}
	return o.Var18, true
}

// HasVar18 returns a boolean if a field has been set.
func (o *BlockchainConfig) HasVar18() bool {
	if o != nil && !IsNil(o.Var18) {
		return true
	}

	return false
}

// SetVar18 gets a reference to the given BlockchainConfig18 and assigns it to the Var18 field.
func (o *BlockchainConfig) SetVar18(v BlockchainConfig18) {
	o.Var18 = &v
}

// GetVar20 returns the Var20 field value if set, zero value otherwise.
func (o *BlockchainConfig) GetVar20() BlockchainConfig20 {
	if o == nil || IsNil(o.Var20) {
		var ret BlockchainConfig20
		return ret
	}
	return *o.Var20
}

// GetVar20Ok returns a tuple with the Var20 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockchainConfig) GetVar20Ok() (*BlockchainConfig20, bool) {
	if o == nil || IsNil(o.Var20) {
		return nil, false
	}
	return o.Var20, true
}

// HasVar20 returns a boolean if a field has been set.
func (o *BlockchainConfig) HasVar20() bool {
	if o != nil && !IsNil(o.Var20) {
		return true
	}

	return false
}

// SetVar20 gets a reference to the given BlockchainConfig20 and assigns it to the Var20 field.
func (o *BlockchainConfig) SetVar20(v BlockchainConfig20) {
	o.Var20 = &v
}

// GetVar21 returns the Var21 field value if set, zero value otherwise.
func (o *BlockchainConfig) GetVar21() BlockchainConfig21 {
	if o == nil || IsNil(o.Var21) {
		var ret BlockchainConfig21
		return ret
	}
	return *o.Var21
}

// GetVar21Ok returns a tuple with the Var21 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockchainConfig) GetVar21Ok() (*BlockchainConfig21, bool) {
	if o == nil || IsNil(o.Var21) {
		return nil, false
	}
	return o.Var21, true
}

// HasVar21 returns a boolean if a field has been set.
func (o *BlockchainConfig) HasVar21() bool {
	if o != nil && !IsNil(o.Var21) {
		return true
	}

	return false
}

// SetVar21 gets a reference to the given BlockchainConfig21 and assigns it to the Var21 field.
func (o *BlockchainConfig) SetVar21(v BlockchainConfig21) {
	o.Var21 = &v
}

// GetVar22 returns the Var22 field value if set, zero value otherwise.
func (o *BlockchainConfig) GetVar22() BlockchainConfig22 {
	if o == nil || IsNil(o.Var22) {
		var ret BlockchainConfig22
		return ret
	}
	return *o.Var22
}

// GetVar22Ok returns a tuple with the Var22 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockchainConfig) GetVar22Ok() (*BlockchainConfig22, bool) {
	if o == nil || IsNil(o.Var22) {
		return nil, false
	}
	return o.Var22, true
}

// HasVar22 returns a boolean if a field has been set.
func (o *BlockchainConfig) HasVar22() bool {
	if o != nil && !IsNil(o.Var22) {
		return true
	}

	return false
}

// SetVar22 gets a reference to the given BlockchainConfig22 and assigns it to the Var22 field.
func (o *BlockchainConfig) SetVar22(v BlockchainConfig22) {
	o.Var22 = &v
}

// GetVar23 returns the Var23 field value if set, zero value otherwise.
func (o *BlockchainConfig) GetVar23() BlockchainConfig23 {
	if o == nil || IsNil(o.Var23) {
		var ret BlockchainConfig23
		return ret
	}
	return *o.Var23
}

// GetVar23Ok returns a tuple with the Var23 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockchainConfig) GetVar23Ok() (*BlockchainConfig23, bool) {
	if o == nil || IsNil(o.Var23) {
		return nil, false
	}
	return o.Var23, true
}

// HasVar23 returns a boolean if a field has been set.
func (o *BlockchainConfig) HasVar23() bool {
	if o != nil && !IsNil(o.Var23) {
		return true
	}

	return false
}

// SetVar23 gets a reference to the given BlockchainConfig23 and assigns it to the Var23 field.
func (o *BlockchainConfig) SetVar23(v BlockchainConfig23) {
	o.Var23 = &v
}

// GetVar24 returns the Var24 field value if set, zero value otherwise.
func (o *BlockchainConfig) GetVar24() BlockchainConfig24 {
	if o == nil || IsNil(o.Var24) {
		var ret BlockchainConfig24
		return ret
	}
	return *o.Var24
}

// GetVar24Ok returns a tuple with the Var24 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockchainConfig) GetVar24Ok() (*BlockchainConfig24, bool) {
	if o == nil || IsNil(o.Var24) {
		return nil, false
	}
	return o.Var24, true
}

// HasVar24 returns a boolean if a field has been set.
func (o *BlockchainConfig) HasVar24() bool {
	if o != nil && !IsNil(o.Var24) {
		return true
	}

	return false
}

// SetVar24 gets a reference to the given BlockchainConfig24 and assigns it to the Var24 field.
func (o *BlockchainConfig) SetVar24(v BlockchainConfig24) {
	o.Var24 = &v
}

// GetVar25 returns the Var25 field value if set, zero value otherwise.
func (o *BlockchainConfig) GetVar25() BlockchainConfig25 {
	if o == nil || IsNil(o.Var25) {
		var ret BlockchainConfig25
		return ret
	}
	return *o.Var25
}

// GetVar25Ok returns a tuple with the Var25 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockchainConfig) GetVar25Ok() (*BlockchainConfig25, bool) {
	if o == nil || IsNil(o.Var25) {
		return nil, false
	}
	return o.Var25, true
}

// HasVar25 returns a boolean if a field has been set.
func (o *BlockchainConfig) HasVar25() bool {
	if o != nil && !IsNil(o.Var25) {
		return true
	}

	return false
}

// SetVar25 gets a reference to the given BlockchainConfig25 and assigns it to the Var25 field.
func (o *BlockchainConfig) SetVar25(v BlockchainConfig25) {
	o.Var25 = &v
}

// GetVar28 returns the Var28 field value if set, zero value otherwise.
func (o *BlockchainConfig) GetVar28() BlockchainConfig28 {
	if o == nil || IsNil(o.Var28) {
		var ret BlockchainConfig28
		return ret
	}
	return *o.Var28
}

// GetVar28Ok returns a tuple with the Var28 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockchainConfig) GetVar28Ok() (*BlockchainConfig28, bool) {
	if o == nil || IsNil(o.Var28) {
		return nil, false
	}
	return o.Var28, true
}

// HasVar28 returns a boolean if a field has been set.
func (o *BlockchainConfig) HasVar28() bool {
	if o != nil && !IsNil(o.Var28) {
		return true
	}

	return false
}

// SetVar28 gets a reference to the given BlockchainConfig28 and assigns it to the Var28 field.
func (o *BlockchainConfig) SetVar28(v BlockchainConfig28) {
	o.Var28 = &v
}

// GetVar29 returns the Var29 field value if set, zero value otherwise.
func (o *BlockchainConfig) GetVar29() BlockchainConfig29 {
	if o == nil || IsNil(o.Var29) {
		var ret BlockchainConfig29
		return ret
	}
	return *o.Var29
}

// GetVar29Ok returns a tuple with the Var29 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockchainConfig) GetVar29Ok() (*BlockchainConfig29, bool) {
	if o == nil || IsNil(o.Var29) {
		return nil, false
	}
	return o.Var29, true
}

// HasVar29 returns a boolean if a field has been set.
func (o *BlockchainConfig) HasVar29() bool {
	if o != nil && !IsNil(o.Var29) {
		return true
	}

	return false
}

// SetVar29 gets a reference to the given BlockchainConfig29 and assigns it to the Var29 field.
func (o *BlockchainConfig) SetVar29(v BlockchainConfig29) {
	o.Var29 = &v
}

// GetVar31 returns the Var31 field value if set, zero value otherwise.
func (o *BlockchainConfig) GetVar31() BlockchainConfig31 {
	if o == nil || IsNil(o.Var31) {
		var ret BlockchainConfig31
		return ret
	}
	return *o.Var31
}

// GetVar31Ok returns a tuple with the Var31 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockchainConfig) GetVar31Ok() (*BlockchainConfig31, bool) {
	if o == nil || IsNil(o.Var31) {
		return nil, false
	}
	return o.Var31, true
}

// HasVar31 returns a boolean if a field has been set.
func (o *BlockchainConfig) HasVar31() bool {
	if o != nil && !IsNil(o.Var31) {
		return true
	}

	return false
}

// SetVar31 gets a reference to the given BlockchainConfig31 and assigns it to the Var31 field.
func (o *BlockchainConfig) SetVar31(v BlockchainConfig31) {
	o.Var31 = &v
}

// GetVar32 returns the Var32 field value if set, zero value otherwise.
func (o *BlockchainConfig) GetVar32() ValidatorsSet {
	if o == nil || IsNil(o.Var32) {
		var ret ValidatorsSet
		return ret
	}
	return *o.Var32
}

// GetVar32Ok returns a tuple with the Var32 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockchainConfig) GetVar32Ok() (*ValidatorsSet, bool) {
	if o == nil || IsNil(o.Var32) {
		return nil, false
	}
	return o.Var32, true
}

// HasVar32 returns a boolean if a field has been set.
func (o *BlockchainConfig) HasVar32() bool {
	if o != nil && !IsNil(o.Var32) {
		return true
	}

	return false
}

// SetVar32 gets a reference to the given ValidatorsSet and assigns it to the Var32 field.
func (o *BlockchainConfig) SetVar32(v ValidatorsSet) {
	o.Var32 = &v
}

// GetVar33 returns the Var33 field value if set, zero value otherwise.
func (o *BlockchainConfig) GetVar33() ValidatorsSet {
	if o == nil || IsNil(o.Var33) {
		var ret ValidatorsSet
		return ret
	}
	return *o.Var33
}

// GetVar33Ok returns a tuple with the Var33 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockchainConfig) GetVar33Ok() (*ValidatorsSet, bool) {
	if o == nil || IsNil(o.Var33) {
		return nil, false
	}
	return o.Var33, true
}

// HasVar33 returns a boolean if a field has been set.
func (o *BlockchainConfig) HasVar33() bool {
	if o != nil && !IsNil(o.Var33) {
		return true
	}

	return false
}

// SetVar33 gets a reference to the given ValidatorsSet and assigns it to the Var33 field.
func (o *BlockchainConfig) SetVar33(v ValidatorsSet) {
	o.Var33 = &v
}

// GetVar34 returns the Var34 field value if set, zero value otherwise.
func (o *BlockchainConfig) GetVar34() ValidatorsSet {
	if o == nil || IsNil(o.Var34) {
		var ret ValidatorsSet
		return ret
	}
	return *o.Var34
}

// GetVar34Ok returns a tuple with the Var34 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockchainConfig) GetVar34Ok() (*ValidatorsSet, bool) {
	if o == nil || IsNil(o.Var34) {
		return nil, false
	}
	return o.Var34, true
}

// HasVar34 returns a boolean if a field has been set.
func (o *BlockchainConfig) HasVar34() bool {
	if o != nil && !IsNil(o.Var34) {
		return true
	}

	return false
}

// SetVar34 gets a reference to the given ValidatorsSet and assigns it to the Var34 field.
func (o *BlockchainConfig) SetVar34(v ValidatorsSet) {
	o.Var34 = &v
}

// GetVar35 returns the Var35 field value if set, zero value otherwise.
func (o *BlockchainConfig) GetVar35() ValidatorsSet {
	if o == nil || IsNil(o.Var35) {
		var ret ValidatorsSet
		return ret
	}
	return *o.Var35
}

// GetVar35Ok returns a tuple with the Var35 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockchainConfig) GetVar35Ok() (*ValidatorsSet, bool) {
	if o == nil || IsNil(o.Var35) {
		return nil, false
	}
	return o.Var35, true
}

// HasVar35 returns a boolean if a field has been set.
func (o *BlockchainConfig) HasVar35() bool {
	if o != nil && !IsNil(o.Var35) {
		return true
	}

	return false
}

// SetVar35 gets a reference to the given ValidatorsSet and assigns it to the Var35 field.
func (o *BlockchainConfig) SetVar35(v ValidatorsSet) {
	o.Var35 = &v
}

// GetVar36 returns the Var36 field value if set, zero value otherwise.
func (o *BlockchainConfig) GetVar36() ValidatorsSet {
	if o == nil || IsNil(o.Var36) {
		var ret ValidatorsSet
		return ret
	}
	return *o.Var36
}

// GetVar36Ok returns a tuple with the Var36 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockchainConfig) GetVar36Ok() (*ValidatorsSet, bool) {
	if o == nil || IsNil(o.Var36) {
		return nil, false
	}
	return o.Var36, true
}

// HasVar36 returns a boolean if a field has been set.
func (o *BlockchainConfig) HasVar36() bool {
	if o != nil && !IsNil(o.Var36) {
		return true
	}

	return false
}

// SetVar36 gets a reference to the given ValidatorsSet and assigns it to the Var36 field.
func (o *BlockchainConfig) SetVar36(v ValidatorsSet) {
	o.Var36 = &v
}

// GetVar37 returns the Var37 field value if set, zero value otherwise.
func (o *BlockchainConfig) GetVar37() ValidatorsSet {
	if o == nil || IsNil(o.Var37) {
		var ret ValidatorsSet
		return ret
	}
	return *o.Var37
}

// GetVar37Ok returns a tuple with the Var37 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockchainConfig) GetVar37Ok() (*ValidatorsSet, bool) {
	if o == nil || IsNil(o.Var37) {
		return nil, false
	}
	return o.Var37, true
}

// HasVar37 returns a boolean if a field has been set.
func (o *BlockchainConfig) HasVar37() bool {
	if o != nil && !IsNil(o.Var37) {
		return true
	}

	return false
}

// SetVar37 gets a reference to the given ValidatorsSet and assigns it to the Var37 field.
func (o *BlockchainConfig) SetVar37(v ValidatorsSet) {
	o.Var37 = &v
}

// GetVar40 returns the Var40 field value if set, zero value otherwise.
func (o *BlockchainConfig) GetVar40() BlockchainConfig40 {
	if o == nil || IsNil(o.Var40) {
		var ret BlockchainConfig40
		return ret
	}
	return *o.Var40
}

// GetVar40Ok returns a tuple with the Var40 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockchainConfig) GetVar40Ok() (*BlockchainConfig40, bool) {
	if o == nil || IsNil(o.Var40) {
		return nil, false
	}
	return o.Var40, true
}

// HasVar40 returns a boolean if a field has been set.
func (o *BlockchainConfig) HasVar40() bool {
	if o != nil && !IsNil(o.Var40) {
		return true
	}

	return false
}

// SetVar40 gets a reference to the given BlockchainConfig40 and assigns it to the Var40 field.
func (o *BlockchainConfig) SetVar40(v BlockchainConfig40) {
	o.Var40 = &v
}

// GetVar43 returns the Var43 field value if set, zero value otherwise.
func (o *BlockchainConfig) GetVar43() BlockchainConfig43 {
	if o == nil || IsNil(o.Var43) {
		var ret BlockchainConfig43
		return ret
	}
	return *o.Var43
}

// GetVar43Ok returns a tuple with the Var43 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockchainConfig) GetVar43Ok() (*BlockchainConfig43, bool) {
	if o == nil || IsNil(o.Var43) {
		return nil, false
	}
	return o.Var43, true
}

// HasVar43 returns a boolean if a field has been set.
func (o *BlockchainConfig) HasVar43() bool {
	if o != nil && !IsNil(o.Var43) {
		return true
	}

	return false
}

// SetVar43 gets a reference to the given BlockchainConfig43 and assigns it to the Var43 field.
func (o *BlockchainConfig) SetVar43(v BlockchainConfig43) {
	o.Var43 = &v
}

// GetVar44 returns the Var44 field value
func (o *BlockchainConfig) GetVar44() BlockchainConfig44 {
	if o == nil {
		var ret BlockchainConfig44
		return ret
	}

	return o.Var44
}

// GetVar44Ok returns a tuple with the Var44 field value
// and a boolean to check if the value has been set.
func (o *BlockchainConfig) GetVar44Ok() (*BlockchainConfig44, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Var44, true
}

// SetVar44 sets field value
func (o *BlockchainConfig) SetVar44(v BlockchainConfig44) {
	o.Var44 = v
}

// GetVar71 returns the Var71 field value if set, zero value otherwise.
func (o *BlockchainConfig) GetVar71() BlockchainConfig71 {
	if o == nil || IsNil(o.Var71) {
		var ret BlockchainConfig71
		return ret
	}
	return *o.Var71
}

// GetVar71Ok returns a tuple with the Var71 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockchainConfig) GetVar71Ok() (*BlockchainConfig71, bool) {
	if o == nil || IsNil(o.Var71) {
		return nil, false
	}
	return o.Var71, true
}

// HasVar71 returns a boolean if a field has been set.
func (o *BlockchainConfig) HasVar71() bool {
	if o != nil && !IsNil(o.Var71) {
		return true
	}

	return false
}

// SetVar71 gets a reference to the given BlockchainConfig71 and assigns it to the Var71 field.
func (o *BlockchainConfig) SetVar71(v BlockchainConfig71) {
	o.Var71 = &v
}

// GetVar72 returns the Var72 field value if set, zero value otherwise.
func (o *BlockchainConfig) GetVar72() BlockchainConfig71 {
	if o == nil || IsNil(o.Var72) {
		var ret BlockchainConfig71
		return ret
	}
	return *o.Var72
}

// GetVar72Ok returns a tuple with the Var72 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockchainConfig) GetVar72Ok() (*BlockchainConfig71, bool) {
	if o == nil || IsNil(o.Var72) {
		return nil, false
	}
	return o.Var72, true
}

// HasVar72 returns a boolean if a field has been set.
func (o *BlockchainConfig) HasVar72() bool {
	if o != nil && !IsNil(o.Var72) {
		return true
	}

	return false
}

// SetVar72 gets a reference to the given BlockchainConfig71 and assigns it to the Var72 field.
func (o *BlockchainConfig) SetVar72(v BlockchainConfig71) {
	o.Var72 = &v
}

// GetVar73 returns the Var73 field value if set, zero value otherwise.
func (o *BlockchainConfig) GetVar73() BlockchainConfig71 {
	if o == nil || IsNil(o.Var73) {
		var ret BlockchainConfig71
		return ret
	}
	return *o.Var73
}

// GetVar73Ok returns a tuple with the Var73 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockchainConfig) GetVar73Ok() (*BlockchainConfig71, bool) {
	if o == nil || IsNil(o.Var73) {
		return nil, false
	}
	return o.Var73, true
}

// HasVar73 returns a boolean if a field has been set.
func (o *BlockchainConfig) HasVar73() bool {
	if o != nil && !IsNil(o.Var73) {
		return true
	}

	return false
}

// SetVar73 gets a reference to the given BlockchainConfig71 and assigns it to the Var73 field.
func (o *BlockchainConfig) SetVar73(v BlockchainConfig71) {
	o.Var73 = &v
}

// GetVar79 returns the Var79 field value if set, zero value otherwise.
func (o *BlockchainConfig) GetVar79() BlockchainConfig79 {
	if o == nil || IsNil(o.Var79) {
		var ret BlockchainConfig79
		return ret
	}
	return *o.Var79
}

// GetVar79Ok returns a tuple with the Var79 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockchainConfig) GetVar79Ok() (*BlockchainConfig79, bool) {
	if o == nil || IsNil(o.Var79) {
		return nil, false
	}
	return o.Var79, true
}

// HasVar79 returns a boolean if a field has been set.
func (o *BlockchainConfig) HasVar79() bool {
	if o != nil && !IsNil(o.Var79) {
		return true
	}

	return false
}

// SetVar79 gets a reference to the given BlockchainConfig79 and assigns it to the Var79 field.
func (o *BlockchainConfig) SetVar79(v BlockchainConfig79) {
	o.Var79 = &v
}

// GetVar81 returns the Var81 field value if set, zero value otherwise.
func (o *BlockchainConfig) GetVar81() BlockchainConfig79 {
	if o == nil || IsNil(o.Var81) {
		var ret BlockchainConfig79
		return ret
	}
	return *o.Var81
}

// GetVar81Ok returns a tuple with the Var81 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockchainConfig) GetVar81Ok() (*BlockchainConfig79, bool) {
	if o == nil || IsNil(o.Var81) {
		return nil, false
	}
	return o.Var81, true
}

// HasVar81 returns a boolean if a field has been set.
func (o *BlockchainConfig) HasVar81() bool {
	if o != nil && !IsNil(o.Var81) {
		return true
	}

	return false
}

// SetVar81 gets a reference to the given BlockchainConfig79 and assigns it to the Var81 field.
func (o *BlockchainConfig) SetVar81(v BlockchainConfig79) {
	o.Var81 = &v
}

// GetVar82 returns the Var82 field value if set, zero value otherwise.
func (o *BlockchainConfig) GetVar82() BlockchainConfig79 {
	if o == nil || IsNil(o.Var82) {
		var ret BlockchainConfig79
		return ret
	}
	return *o.Var82
}

// GetVar82Ok returns a tuple with the Var82 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockchainConfig) GetVar82Ok() (*BlockchainConfig79, bool) {
	if o == nil || IsNil(o.Var82) {
		return nil, false
	}
	return o.Var82, true
}

// HasVar82 returns a boolean if a field has been set.
func (o *BlockchainConfig) HasVar82() bool {
	if o != nil && !IsNil(o.Var82) {
		return true
	}

	return false
}

// SetVar82 gets a reference to the given BlockchainConfig79 and assigns it to the Var82 field.
func (o *BlockchainConfig) SetVar82(v BlockchainConfig79) {
	o.Var82 = &v
}

func (o BlockchainConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BlockchainConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["raw"] = o.Raw
	toSerialize["0"] = o.Var0
	toSerialize["1"] = o.Var1
	toSerialize["2"] = o.Var2
	if !IsNil(o.Var3) {
		toSerialize["3"] = o.Var3
	}
	toSerialize["4"] = o.Var4
	if !IsNil(o.Var5) {
		toSerialize["5"] = o.Var5
	}
	if !IsNil(o.Var6) {
		toSerialize["6"] = o.Var6
	}
	if !IsNil(o.Var7) {
		toSerialize["7"] = o.Var7
	}
	if !IsNil(o.Var8) {
		toSerialize["8"] = o.Var8
	}
	if !IsNil(o.Var9) {
		toSerialize["9"] = o.Var9
	}
	if !IsNil(o.Var10) {
		toSerialize["10"] = o.Var10
	}
	if !IsNil(o.Var11) {
		toSerialize["11"] = o.Var11
	}
	if !IsNil(o.Var12) {
		toSerialize["12"] = o.Var12
	}
	if !IsNil(o.Var13) {
		toSerialize["13"] = o.Var13
	}
	if !IsNil(o.Var14) {
		toSerialize["14"] = o.Var14
	}
	if !IsNil(o.Var15) {
		toSerialize["15"] = o.Var15
	}
	if !IsNil(o.Var16) {
		toSerialize["16"] = o.Var16
	}
	if !IsNil(o.Var17) {
		toSerialize["17"] = o.Var17
	}
	if !IsNil(o.Var18) {
		toSerialize["18"] = o.Var18
	}
	if !IsNil(o.Var20) {
		toSerialize["20"] = o.Var20
	}
	if !IsNil(o.Var21) {
		toSerialize["21"] = o.Var21
	}
	if !IsNil(o.Var22) {
		toSerialize["22"] = o.Var22
	}
	if !IsNil(o.Var23) {
		toSerialize["23"] = o.Var23
	}
	if !IsNil(o.Var24) {
		toSerialize["24"] = o.Var24
	}
	if !IsNil(o.Var25) {
		toSerialize["25"] = o.Var25
	}
	if !IsNil(o.Var28) {
		toSerialize["28"] = o.Var28
	}
	if !IsNil(o.Var29) {
		toSerialize["29"] = o.Var29
	}
	if !IsNil(o.Var31) {
		toSerialize["31"] = o.Var31
	}
	if !IsNil(o.Var32) {
		toSerialize["32"] = o.Var32
	}
	if !IsNil(o.Var33) {
		toSerialize["33"] = o.Var33
	}
	if !IsNil(o.Var34) {
		toSerialize["34"] = o.Var34
	}
	if !IsNil(o.Var35) {
		toSerialize["35"] = o.Var35
	}
	if !IsNil(o.Var36) {
		toSerialize["36"] = o.Var36
	}
	if !IsNil(o.Var37) {
		toSerialize["37"] = o.Var37
	}
	if !IsNil(o.Var40) {
		toSerialize["40"] = o.Var40
	}
	if !IsNil(o.Var43) {
		toSerialize["43"] = o.Var43
	}
	toSerialize["44"] = o.Var44
	if !IsNil(o.Var71) {
		toSerialize["71"] = o.Var71
	}
	if !IsNil(o.Var72) {
		toSerialize["72"] = o.Var72
	}
	if !IsNil(o.Var73) {
		toSerialize["73"] = o.Var73
	}
	if !IsNil(o.Var79) {
		toSerialize["79"] = o.Var79
	}
	if !IsNil(o.Var81) {
		toSerialize["81"] = o.Var81
	}
	if !IsNil(o.Var82) {
		toSerialize["82"] = o.Var82
	}
	return toSerialize, nil
}

func (o *BlockchainConfig) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"raw",
		"0",
		"1",
		"2",
		"4",
		"44",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBlockchainConfig := _BlockchainConfig{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBlockchainConfig)

	if err != nil {
		return err
	}

	*o = BlockchainConfig(varBlockchainConfig)

	return err
}

type NullableBlockchainConfig struct {
	value *BlockchainConfig
	isSet bool
}

func (v NullableBlockchainConfig) Get() *BlockchainConfig {
	return v.value
}

func (v *NullableBlockchainConfig) Set(val *BlockchainConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableBlockchainConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableBlockchainConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlockchainConfig(val *BlockchainConfig) *NullableBlockchainConfig {
	return &NullableBlockchainConfig{value: val, isSet: true}
}

func (v NullableBlockchainConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlockchainConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


