/*
REST api to TON blockchain explorer

Provide access to indexed TON blockchain

API version: 2.0.0
Contact: support@tonkeeper.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tonapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ValidatorsSetListInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ValidatorsSetListInner{}

// ValidatorsSetListInner struct for ValidatorsSetListInner
type ValidatorsSetListInner struct {
	PublicKey string `json:"public_key"`
	Weight int64 `json:"weight"`
	AdnlAddr *string `json:"adnl_addr,omitempty"`
}

type _ValidatorsSetListInner ValidatorsSetListInner

// NewValidatorsSetListInner instantiates a new ValidatorsSetListInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewValidatorsSetListInner(publicKey string, weight int64) *ValidatorsSetListInner {
	this := ValidatorsSetListInner{}
	this.PublicKey = publicKey
	this.Weight = weight
	return &this
}

// NewValidatorsSetListInnerWithDefaults instantiates a new ValidatorsSetListInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewValidatorsSetListInnerWithDefaults() *ValidatorsSetListInner {
	this := ValidatorsSetListInner{}
	return &this
}

// GetPublicKey returns the PublicKey field value
func (o *ValidatorsSetListInner) GetPublicKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PublicKey
}

// GetPublicKeyOk returns a tuple with the PublicKey field value
// and a boolean to check if the value has been set.
func (o *ValidatorsSetListInner) GetPublicKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PublicKey, true
}

// SetPublicKey sets field value
func (o *ValidatorsSetListInner) SetPublicKey(v string) {
	o.PublicKey = v
}

// GetWeight returns the Weight field value
func (o *ValidatorsSetListInner) GetWeight() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Weight
}

// GetWeightOk returns a tuple with the Weight field value
// and a boolean to check if the value has been set.
func (o *ValidatorsSetListInner) GetWeightOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Weight, true
}

// SetWeight sets field value
func (o *ValidatorsSetListInner) SetWeight(v int64) {
	o.Weight = v
}

// GetAdnlAddr returns the AdnlAddr field value if set, zero value otherwise.
func (o *ValidatorsSetListInner) GetAdnlAddr() string {
	if o == nil || IsNil(o.AdnlAddr) {
		var ret string
		return ret
	}
	return *o.AdnlAddr
}

// GetAdnlAddrOk returns a tuple with the AdnlAddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidatorsSetListInner) GetAdnlAddrOk() (*string, bool) {
	if o == nil || IsNil(o.AdnlAddr) {
		return nil, false
	}
	return o.AdnlAddr, true
}

// HasAdnlAddr returns a boolean if a field has been set.
func (o *ValidatorsSetListInner) HasAdnlAddr() bool {
	if o != nil && !IsNil(o.AdnlAddr) {
		return true
	}

	return false
}

// SetAdnlAddr gets a reference to the given string and assigns it to the AdnlAddr field.
func (o *ValidatorsSetListInner) SetAdnlAddr(v string) {
	o.AdnlAddr = &v
}

func (o ValidatorsSetListInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ValidatorsSetListInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["public_key"] = o.PublicKey
	toSerialize["weight"] = o.Weight
	if !IsNil(o.AdnlAddr) {
		toSerialize["adnl_addr"] = o.AdnlAddr
	}
	return toSerialize, nil
}

func (o *ValidatorsSetListInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"public_key",
		"weight",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varValidatorsSetListInner := _ValidatorsSetListInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varValidatorsSetListInner)

	if err != nil {
		return err
	}

	*o = ValidatorsSetListInner(varValidatorsSetListInner)

	return err
}

type NullableValidatorsSetListInner struct {
	value *ValidatorsSetListInner
	isSet bool
}

func (v NullableValidatorsSetListInner) Get() *ValidatorsSetListInner {
	return v.value
}

func (v *NullableValidatorsSetListInner) Set(val *ValidatorsSetListInner) {
	v.value = val
	v.isSet = true
}

func (v NullableValidatorsSetListInner) IsSet() bool {
	return v.isSet
}

func (v *NullableValidatorsSetListInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableValidatorsSetListInner(val *ValidatorsSetListInner) *NullableValidatorsSetListInner {
	return &NullableValidatorsSetListInner{value: val, isSet: true}
}

func (v NullableValidatorsSetListInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableValidatorsSetListInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


