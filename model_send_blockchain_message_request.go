/*
REST api to TON blockchain explorer

Provide access to indexed TON blockchain

API version: 2.0.0
Contact: support@tonkeeper.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tonapi

import (
	"encoding/json"
)

// checks if the SendBlockchainMessageRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SendBlockchainMessageRequest{}

// SendBlockchainMessageRequest struct for SendBlockchainMessageRequest
type SendBlockchainMessageRequest struct {
	Boc *string `json:"boc,omitempty"`
	Batch []string `json:"batch,omitempty"`
}

// NewSendBlockchainMessageRequest instantiates a new SendBlockchainMessageRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSendBlockchainMessageRequest() *SendBlockchainMessageRequest {
	this := SendBlockchainMessageRequest{}
	return &this
}

// NewSendBlockchainMessageRequestWithDefaults instantiates a new SendBlockchainMessageRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSendBlockchainMessageRequestWithDefaults() *SendBlockchainMessageRequest {
	this := SendBlockchainMessageRequest{}
	return &this
}

// GetBoc returns the Boc field value if set, zero value otherwise.
func (o *SendBlockchainMessageRequest) GetBoc() string {
	if o == nil || IsNil(o.Boc) {
		var ret string
		return ret
	}
	return *o.Boc
}

// GetBocOk returns a tuple with the Boc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendBlockchainMessageRequest) GetBocOk() (*string, bool) {
	if o == nil || IsNil(o.Boc) {
		return nil, false
	}
	return o.Boc, true
}

// HasBoc returns a boolean if a field has been set.
func (o *SendBlockchainMessageRequest) HasBoc() bool {
	if o != nil && !IsNil(o.Boc) {
		return true
	}

	return false
}

// SetBoc gets a reference to the given string and assigns it to the Boc field.
func (o *SendBlockchainMessageRequest) SetBoc(v string) {
	o.Boc = &v
}

// GetBatch returns the Batch field value if set, zero value otherwise.
func (o *SendBlockchainMessageRequest) GetBatch() []string {
	if o == nil || IsNil(o.Batch) {
		var ret []string
		return ret
	}
	return o.Batch
}

// GetBatchOk returns a tuple with the Batch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendBlockchainMessageRequest) GetBatchOk() ([]string, bool) {
	if o == nil || IsNil(o.Batch) {
		return nil, false
	}
	return o.Batch, true
}

// HasBatch returns a boolean if a field has been set.
func (o *SendBlockchainMessageRequest) HasBatch() bool {
	if o != nil && !IsNil(o.Batch) {
		return true
	}

	return false
}

// SetBatch gets a reference to the given []string and assigns it to the Batch field.
func (o *SendBlockchainMessageRequest) SetBatch(v []string) {
	o.Batch = v
}

func (o SendBlockchainMessageRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SendBlockchainMessageRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Boc) {
		toSerialize["boc"] = o.Boc
	}
	if !IsNil(o.Batch) {
		toSerialize["batch"] = o.Batch
	}
	return toSerialize, nil
}

type NullableSendBlockchainMessageRequest struct {
	value *SendBlockchainMessageRequest
	isSet bool
}

func (v NullableSendBlockchainMessageRequest) Get() *SendBlockchainMessageRequest {
	return v.value
}

func (v *NullableSendBlockchainMessageRequest) Set(val *SendBlockchainMessageRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSendBlockchainMessageRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSendBlockchainMessageRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSendBlockchainMessageRequest(val *SendBlockchainMessageRequest) *NullableSendBlockchainMessageRequest {
	return &NullableSendBlockchainMessageRequest{value: val, isSet: true}
}

func (v NullableSendBlockchainMessageRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSendBlockchainMessageRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


