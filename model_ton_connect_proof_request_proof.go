/*
REST api to TON blockchain explorer

Provide access to indexed TON blockchain

API version: 2.0.0
Contact: support@tonkeeper.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tonapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TonConnectProofRequestProof type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TonConnectProofRequestProof{}

// TonConnectProofRequestProof struct for TonConnectProofRequestProof
type TonConnectProofRequestProof struct {
	Timestamp int64 `json:"timestamp"`
	Domain TonConnectProofRequestProofDomain `json:"domain"`
	Signature string `json:"signature"`
	Payload string `json:"payload"`
	StateInit *string `json:"state_init,omitempty"`
}

type _TonConnectProofRequestProof TonConnectProofRequestProof

// NewTonConnectProofRequestProof instantiates a new TonConnectProofRequestProof object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTonConnectProofRequestProof(timestamp int64, domain TonConnectProofRequestProofDomain, signature string, payload string) *TonConnectProofRequestProof {
	this := TonConnectProofRequestProof{}
	this.Timestamp = timestamp
	this.Domain = domain
	this.Signature = signature
	this.Payload = payload
	return &this
}

// NewTonConnectProofRequestProofWithDefaults instantiates a new TonConnectProofRequestProof object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTonConnectProofRequestProofWithDefaults() *TonConnectProofRequestProof {
	this := TonConnectProofRequestProof{}
	return &this
}

// GetTimestamp returns the Timestamp field value
func (o *TonConnectProofRequestProof) GetTimestamp() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value
// and a boolean to check if the value has been set.
func (o *TonConnectProofRequestProof) GetTimestampOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timestamp, true
}

// SetTimestamp sets field value
func (o *TonConnectProofRequestProof) SetTimestamp(v int64) {
	o.Timestamp = v
}

// GetDomain returns the Domain field value
func (o *TonConnectProofRequestProof) GetDomain() TonConnectProofRequestProofDomain {
	if o == nil {
		var ret TonConnectProofRequestProofDomain
		return ret
	}

	return o.Domain
}

// GetDomainOk returns a tuple with the Domain field value
// and a boolean to check if the value has been set.
func (o *TonConnectProofRequestProof) GetDomainOk() (*TonConnectProofRequestProofDomain, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Domain, true
}

// SetDomain sets field value
func (o *TonConnectProofRequestProof) SetDomain(v TonConnectProofRequestProofDomain) {
	o.Domain = v
}

// GetSignature returns the Signature field value
func (o *TonConnectProofRequestProof) GetSignature() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Signature
}

// GetSignatureOk returns a tuple with the Signature field value
// and a boolean to check if the value has been set.
func (o *TonConnectProofRequestProof) GetSignatureOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Signature, true
}

// SetSignature sets field value
func (o *TonConnectProofRequestProof) SetSignature(v string) {
	o.Signature = v
}

// GetPayload returns the Payload field value
func (o *TonConnectProofRequestProof) GetPayload() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Payload
}

// GetPayloadOk returns a tuple with the Payload field value
// and a boolean to check if the value has been set.
func (o *TonConnectProofRequestProof) GetPayloadOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Payload, true
}

// SetPayload sets field value
func (o *TonConnectProofRequestProof) SetPayload(v string) {
	o.Payload = v
}

// GetStateInit returns the StateInit field value if set, zero value otherwise.
func (o *TonConnectProofRequestProof) GetStateInit() string {
	if o == nil || IsNil(o.StateInit) {
		var ret string
		return ret
	}
	return *o.StateInit
}

// GetStateInitOk returns a tuple with the StateInit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TonConnectProofRequestProof) GetStateInitOk() (*string, bool) {
	if o == nil || IsNil(o.StateInit) {
		return nil, false
	}
	return o.StateInit, true
}

// HasStateInit returns a boolean if a field has been set.
func (o *TonConnectProofRequestProof) HasStateInit() bool {
	if o != nil && !IsNil(o.StateInit) {
		return true
	}

	return false
}

// SetStateInit gets a reference to the given string and assigns it to the StateInit field.
func (o *TonConnectProofRequestProof) SetStateInit(v string) {
	o.StateInit = &v
}

func (o TonConnectProofRequestProof) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TonConnectProofRequestProof) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["timestamp"] = o.Timestamp
	toSerialize["domain"] = o.Domain
	toSerialize["signature"] = o.Signature
	toSerialize["payload"] = o.Payload
	if !IsNil(o.StateInit) {
		toSerialize["state_init"] = o.StateInit
	}
	return toSerialize, nil
}

func (o *TonConnectProofRequestProof) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"timestamp",
		"domain",
		"signature",
		"payload",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTonConnectProofRequestProof := _TonConnectProofRequestProof{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTonConnectProofRequestProof)

	if err != nil {
		return err
	}

	*o = TonConnectProofRequestProof(varTonConnectProofRequestProof)

	return err
}

type NullableTonConnectProofRequestProof struct {
	value *TonConnectProofRequestProof
	isSet bool
}

func (v NullableTonConnectProofRequestProof) Get() *TonConnectProofRequestProof {
	return v.value
}

func (v *NullableTonConnectProofRequestProof) Set(val *TonConnectProofRequestProof) {
	v.value = val
	v.isSet = true
}

func (v NullableTonConnectProofRequestProof) IsSet() bool {
	return v.isSet
}

func (v *NullableTonConnectProofRequestProof) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTonConnectProofRequestProof(val *TonConnectProofRequestProof) *NullableTonConnectProofRequestProof {
	return &NullableTonConnectProofRequestProof{value: val, isSet: true}
}

func (v NullableTonConnectProofRequestProof) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTonConnectProofRequestProof) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


