/*
REST api to TON blockchain explorer

Provide access to indexed TON blockchain

API version: 2.0.0
Contact: support@tonkeeper.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tonapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BlockchainAccountInspectMethodsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BlockchainAccountInspectMethodsInner{}

// BlockchainAccountInspectMethodsInner struct for BlockchainAccountInspectMethodsInner
type BlockchainAccountInspectMethodsInner struct {
	Id int64 `json:"id"`
	Method string `json:"method"`
}

type _BlockchainAccountInspectMethodsInner BlockchainAccountInspectMethodsInner

// NewBlockchainAccountInspectMethodsInner instantiates a new BlockchainAccountInspectMethodsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlockchainAccountInspectMethodsInner(id int64, method string) *BlockchainAccountInspectMethodsInner {
	this := BlockchainAccountInspectMethodsInner{}
	this.Id = id
	this.Method = method
	return &this
}

// NewBlockchainAccountInspectMethodsInnerWithDefaults instantiates a new BlockchainAccountInspectMethodsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlockchainAccountInspectMethodsInnerWithDefaults() *BlockchainAccountInspectMethodsInner {
	this := BlockchainAccountInspectMethodsInner{}
	return &this
}

// GetId returns the Id field value
func (o *BlockchainAccountInspectMethodsInner) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BlockchainAccountInspectMethodsInner) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BlockchainAccountInspectMethodsInner) SetId(v int64) {
	o.Id = v
}

// GetMethod returns the Method field value
func (o *BlockchainAccountInspectMethodsInner) GetMethod() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Method
}

// GetMethodOk returns a tuple with the Method field value
// and a boolean to check if the value has been set.
func (o *BlockchainAccountInspectMethodsInner) GetMethodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Method, true
}

// SetMethod sets field value
func (o *BlockchainAccountInspectMethodsInner) SetMethod(v string) {
	o.Method = v
}

func (o BlockchainAccountInspectMethodsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BlockchainAccountInspectMethodsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["method"] = o.Method
	return toSerialize, nil
}

func (o *BlockchainAccountInspectMethodsInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"method",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBlockchainAccountInspectMethodsInner := _BlockchainAccountInspectMethodsInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBlockchainAccountInspectMethodsInner)

	if err != nil {
		return err
	}

	*o = BlockchainAccountInspectMethodsInner(varBlockchainAccountInspectMethodsInner)

	return err
}

type NullableBlockchainAccountInspectMethodsInner struct {
	value *BlockchainAccountInspectMethodsInner
	isSet bool
}

func (v NullableBlockchainAccountInspectMethodsInner) Get() *BlockchainAccountInspectMethodsInner {
	return v.value
}

func (v *NullableBlockchainAccountInspectMethodsInner) Set(val *BlockchainAccountInspectMethodsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableBlockchainAccountInspectMethodsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableBlockchainAccountInspectMethodsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlockchainAccountInspectMethodsInner(val *BlockchainAccountInspectMethodsInner) *NullableBlockchainAccountInspectMethodsInner {
	return &NullableBlockchainAccountInspectMethodsInner{value: val, isSet: true}
}

func (v NullableBlockchainAccountInspectMethodsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlockchainAccountInspectMethodsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


