/*
REST api to TON blockchain explorer

Provide access to indexed TON blockchain

API version: 2.0.0
Contact: support@tonkeeper.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tonapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the MisbehaviourPunishmentConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MisbehaviourPunishmentConfig{}

// MisbehaviourPunishmentConfig struct for MisbehaviourPunishmentConfig
type MisbehaviourPunishmentConfig struct {
	DefaultFlatFine int64 `json:"default_flat_fine"`
	DefaultProportionalFine int64 `json:"default_proportional_fine"`
	SeverityFlatMult int32 `json:"severity_flat_mult"`
	SeverityProportionalMult int32 `json:"severity_proportional_mult"`
	UnpunishableInterval int32 `json:"unpunishable_interval"`
	LongInterval int32 `json:"long_interval"`
	LongFlatMult int32 `json:"long_flat_mult"`
	LongProportionalMult int32 `json:"long_proportional_mult"`
	MediumInterval int32 `json:"medium_interval"`
	MediumFlatMult int32 `json:"medium_flat_mult"`
	MediumProportionalMult int32 `json:"medium_proportional_mult"`
}

type _MisbehaviourPunishmentConfig MisbehaviourPunishmentConfig

// NewMisbehaviourPunishmentConfig instantiates a new MisbehaviourPunishmentConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMisbehaviourPunishmentConfig(defaultFlatFine int64, defaultProportionalFine int64, severityFlatMult int32, severityProportionalMult int32, unpunishableInterval int32, longInterval int32, longFlatMult int32, longProportionalMult int32, mediumInterval int32, mediumFlatMult int32, mediumProportionalMult int32) *MisbehaviourPunishmentConfig {
	this := MisbehaviourPunishmentConfig{}
	this.DefaultFlatFine = defaultFlatFine
	this.DefaultProportionalFine = defaultProportionalFine
	this.SeverityFlatMult = severityFlatMult
	this.SeverityProportionalMult = severityProportionalMult
	this.UnpunishableInterval = unpunishableInterval
	this.LongInterval = longInterval
	this.LongFlatMult = longFlatMult
	this.LongProportionalMult = longProportionalMult
	this.MediumInterval = mediumInterval
	this.MediumFlatMult = mediumFlatMult
	this.MediumProportionalMult = mediumProportionalMult
	return &this
}

// NewMisbehaviourPunishmentConfigWithDefaults instantiates a new MisbehaviourPunishmentConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMisbehaviourPunishmentConfigWithDefaults() *MisbehaviourPunishmentConfig {
	this := MisbehaviourPunishmentConfig{}
	return &this
}

// GetDefaultFlatFine returns the DefaultFlatFine field value
func (o *MisbehaviourPunishmentConfig) GetDefaultFlatFine() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.DefaultFlatFine
}

// GetDefaultFlatFineOk returns a tuple with the DefaultFlatFine field value
// and a boolean to check if the value has been set.
func (o *MisbehaviourPunishmentConfig) GetDefaultFlatFineOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DefaultFlatFine, true
}

// SetDefaultFlatFine sets field value
func (o *MisbehaviourPunishmentConfig) SetDefaultFlatFine(v int64) {
	o.DefaultFlatFine = v
}

// GetDefaultProportionalFine returns the DefaultProportionalFine field value
func (o *MisbehaviourPunishmentConfig) GetDefaultProportionalFine() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.DefaultProportionalFine
}

// GetDefaultProportionalFineOk returns a tuple with the DefaultProportionalFine field value
// and a boolean to check if the value has been set.
func (o *MisbehaviourPunishmentConfig) GetDefaultProportionalFineOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DefaultProportionalFine, true
}

// SetDefaultProportionalFine sets field value
func (o *MisbehaviourPunishmentConfig) SetDefaultProportionalFine(v int64) {
	o.DefaultProportionalFine = v
}

// GetSeverityFlatMult returns the SeverityFlatMult field value
func (o *MisbehaviourPunishmentConfig) GetSeverityFlatMult() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SeverityFlatMult
}

// GetSeverityFlatMultOk returns a tuple with the SeverityFlatMult field value
// and a boolean to check if the value has been set.
func (o *MisbehaviourPunishmentConfig) GetSeverityFlatMultOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SeverityFlatMult, true
}

// SetSeverityFlatMult sets field value
func (o *MisbehaviourPunishmentConfig) SetSeverityFlatMult(v int32) {
	o.SeverityFlatMult = v
}

// GetSeverityProportionalMult returns the SeverityProportionalMult field value
func (o *MisbehaviourPunishmentConfig) GetSeverityProportionalMult() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SeverityProportionalMult
}

// GetSeverityProportionalMultOk returns a tuple with the SeverityProportionalMult field value
// and a boolean to check if the value has been set.
func (o *MisbehaviourPunishmentConfig) GetSeverityProportionalMultOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SeverityProportionalMult, true
}

// SetSeverityProportionalMult sets field value
func (o *MisbehaviourPunishmentConfig) SetSeverityProportionalMult(v int32) {
	o.SeverityProportionalMult = v
}

// GetUnpunishableInterval returns the UnpunishableInterval field value
func (o *MisbehaviourPunishmentConfig) GetUnpunishableInterval() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.UnpunishableInterval
}

// GetUnpunishableIntervalOk returns a tuple with the UnpunishableInterval field value
// and a boolean to check if the value has been set.
func (o *MisbehaviourPunishmentConfig) GetUnpunishableIntervalOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UnpunishableInterval, true
}

// SetUnpunishableInterval sets field value
func (o *MisbehaviourPunishmentConfig) SetUnpunishableInterval(v int32) {
	o.UnpunishableInterval = v
}

// GetLongInterval returns the LongInterval field value
func (o *MisbehaviourPunishmentConfig) GetLongInterval() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.LongInterval
}

// GetLongIntervalOk returns a tuple with the LongInterval field value
// and a boolean to check if the value has been set.
func (o *MisbehaviourPunishmentConfig) GetLongIntervalOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LongInterval, true
}

// SetLongInterval sets field value
func (o *MisbehaviourPunishmentConfig) SetLongInterval(v int32) {
	o.LongInterval = v
}

// GetLongFlatMult returns the LongFlatMult field value
func (o *MisbehaviourPunishmentConfig) GetLongFlatMult() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.LongFlatMult
}

// GetLongFlatMultOk returns a tuple with the LongFlatMult field value
// and a boolean to check if the value has been set.
func (o *MisbehaviourPunishmentConfig) GetLongFlatMultOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LongFlatMult, true
}

// SetLongFlatMult sets field value
func (o *MisbehaviourPunishmentConfig) SetLongFlatMult(v int32) {
	o.LongFlatMult = v
}

// GetLongProportionalMult returns the LongProportionalMult field value
func (o *MisbehaviourPunishmentConfig) GetLongProportionalMult() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.LongProportionalMult
}

// GetLongProportionalMultOk returns a tuple with the LongProportionalMult field value
// and a boolean to check if the value has been set.
func (o *MisbehaviourPunishmentConfig) GetLongProportionalMultOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LongProportionalMult, true
}

// SetLongProportionalMult sets field value
func (o *MisbehaviourPunishmentConfig) SetLongProportionalMult(v int32) {
	o.LongProportionalMult = v
}

// GetMediumInterval returns the MediumInterval field value
func (o *MisbehaviourPunishmentConfig) GetMediumInterval() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MediumInterval
}

// GetMediumIntervalOk returns a tuple with the MediumInterval field value
// and a boolean to check if the value has been set.
func (o *MisbehaviourPunishmentConfig) GetMediumIntervalOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MediumInterval, true
}

// SetMediumInterval sets field value
func (o *MisbehaviourPunishmentConfig) SetMediumInterval(v int32) {
	o.MediumInterval = v
}

// GetMediumFlatMult returns the MediumFlatMult field value
func (o *MisbehaviourPunishmentConfig) GetMediumFlatMult() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MediumFlatMult
}

// GetMediumFlatMultOk returns a tuple with the MediumFlatMult field value
// and a boolean to check if the value has been set.
func (o *MisbehaviourPunishmentConfig) GetMediumFlatMultOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MediumFlatMult, true
}

// SetMediumFlatMult sets field value
func (o *MisbehaviourPunishmentConfig) SetMediumFlatMult(v int32) {
	o.MediumFlatMult = v
}

// GetMediumProportionalMult returns the MediumProportionalMult field value
func (o *MisbehaviourPunishmentConfig) GetMediumProportionalMult() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MediumProportionalMult
}

// GetMediumProportionalMultOk returns a tuple with the MediumProportionalMult field value
// and a boolean to check if the value has been set.
func (o *MisbehaviourPunishmentConfig) GetMediumProportionalMultOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MediumProportionalMult, true
}

// SetMediumProportionalMult sets field value
func (o *MisbehaviourPunishmentConfig) SetMediumProportionalMult(v int32) {
	o.MediumProportionalMult = v
}

func (o MisbehaviourPunishmentConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MisbehaviourPunishmentConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["default_flat_fine"] = o.DefaultFlatFine
	toSerialize["default_proportional_fine"] = o.DefaultProportionalFine
	toSerialize["severity_flat_mult"] = o.SeverityFlatMult
	toSerialize["severity_proportional_mult"] = o.SeverityProportionalMult
	toSerialize["unpunishable_interval"] = o.UnpunishableInterval
	toSerialize["long_interval"] = o.LongInterval
	toSerialize["long_flat_mult"] = o.LongFlatMult
	toSerialize["long_proportional_mult"] = o.LongProportionalMult
	toSerialize["medium_interval"] = o.MediumInterval
	toSerialize["medium_flat_mult"] = o.MediumFlatMult
	toSerialize["medium_proportional_mult"] = o.MediumProportionalMult
	return toSerialize, nil
}

func (o *MisbehaviourPunishmentConfig) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"default_flat_fine",
		"default_proportional_fine",
		"severity_flat_mult",
		"severity_proportional_mult",
		"unpunishable_interval",
		"long_interval",
		"long_flat_mult",
		"long_proportional_mult",
		"medium_interval",
		"medium_flat_mult",
		"medium_proportional_mult",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMisbehaviourPunishmentConfig := _MisbehaviourPunishmentConfig{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMisbehaviourPunishmentConfig)

	if err != nil {
		return err
	}

	*o = MisbehaviourPunishmentConfig(varMisbehaviourPunishmentConfig)

	return err
}

type NullableMisbehaviourPunishmentConfig struct {
	value *MisbehaviourPunishmentConfig
	isSet bool
}

func (v NullableMisbehaviourPunishmentConfig) Get() *MisbehaviourPunishmentConfig {
	return v.value
}

func (v *NullableMisbehaviourPunishmentConfig) Set(val *MisbehaviourPunishmentConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableMisbehaviourPunishmentConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableMisbehaviourPunishmentConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMisbehaviourPunishmentConfig(val *MisbehaviourPunishmentConfig) *NullableMisbehaviourPunishmentConfig {
	return &NullableMisbehaviourPunishmentConfig{value: val, isSet: true}
}

func (v NullableMisbehaviourPunishmentConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMisbehaviourPunishmentConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


