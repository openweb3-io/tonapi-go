/*
REST api to TON blockchain explorer

Provide access to indexed TON blockchain

API version: 2.0.0
Contact: support@tonkeeper.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tonapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetRawBlockProof200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetRawBlockProof200Response{}

// GetRawBlockProof200Response struct for GetRawBlockProof200Response
type GetRawBlockProof200Response struct {
	Complete bool `json:"complete"`
	From BlockRaw `json:"from"`
	To BlockRaw `json:"to"`
	Steps []GetRawBlockProof200ResponseStepsInner `json:"steps"`
}

type _GetRawBlockProof200Response GetRawBlockProof200Response

// NewGetRawBlockProof200Response instantiates a new GetRawBlockProof200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetRawBlockProof200Response(complete bool, from BlockRaw, to BlockRaw, steps []GetRawBlockProof200ResponseStepsInner) *GetRawBlockProof200Response {
	this := GetRawBlockProof200Response{}
	this.Complete = complete
	this.From = from
	this.To = to
	this.Steps = steps
	return &this
}

// NewGetRawBlockProof200ResponseWithDefaults instantiates a new GetRawBlockProof200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetRawBlockProof200ResponseWithDefaults() *GetRawBlockProof200Response {
	this := GetRawBlockProof200Response{}
	return &this
}

// GetComplete returns the Complete field value
func (o *GetRawBlockProof200Response) GetComplete() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Complete
}

// GetCompleteOk returns a tuple with the Complete field value
// and a boolean to check if the value has been set.
func (o *GetRawBlockProof200Response) GetCompleteOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Complete, true
}

// SetComplete sets field value
func (o *GetRawBlockProof200Response) SetComplete(v bool) {
	o.Complete = v
}

// GetFrom returns the From field value
func (o *GetRawBlockProof200Response) GetFrom() BlockRaw {
	if o == nil {
		var ret BlockRaw
		return ret
	}

	return o.From
}

// GetFromOk returns a tuple with the From field value
// and a boolean to check if the value has been set.
func (o *GetRawBlockProof200Response) GetFromOk() (*BlockRaw, bool) {
	if o == nil {
		return nil, false
	}
	return &o.From, true
}

// SetFrom sets field value
func (o *GetRawBlockProof200Response) SetFrom(v BlockRaw) {
	o.From = v
}

// GetTo returns the To field value
func (o *GetRawBlockProof200Response) GetTo() BlockRaw {
	if o == nil {
		var ret BlockRaw
		return ret
	}

	return o.To
}

// GetToOk returns a tuple with the To field value
// and a boolean to check if the value has been set.
func (o *GetRawBlockProof200Response) GetToOk() (*BlockRaw, bool) {
	if o == nil {
		return nil, false
	}
	return &o.To, true
}

// SetTo sets field value
func (o *GetRawBlockProof200Response) SetTo(v BlockRaw) {
	o.To = v
}

// GetSteps returns the Steps field value
func (o *GetRawBlockProof200Response) GetSteps() []GetRawBlockProof200ResponseStepsInner {
	if o == nil {
		var ret []GetRawBlockProof200ResponseStepsInner
		return ret
	}

	return o.Steps
}

// GetStepsOk returns a tuple with the Steps field value
// and a boolean to check if the value has been set.
func (o *GetRawBlockProof200Response) GetStepsOk() ([]GetRawBlockProof200ResponseStepsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Steps, true
}

// SetSteps sets field value
func (o *GetRawBlockProof200Response) SetSteps(v []GetRawBlockProof200ResponseStepsInner) {
	o.Steps = v
}

func (o GetRawBlockProof200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetRawBlockProof200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["complete"] = o.Complete
	toSerialize["from"] = o.From
	toSerialize["to"] = o.To
	toSerialize["steps"] = o.Steps
	return toSerialize, nil
}

func (o *GetRawBlockProof200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"complete",
		"from",
		"to",
		"steps",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetRawBlockProof200Response := _GetRawBlockProof200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetRawBlockProof200Response)

	if err != nil {
		return err
	}

	*o = GetRawBlockProof200Response(varGetRawBlockProof200Response)

	return err
}

type NullableGetRawBlockProof200Response struct {
	value *GetRawBlockProof200Response
	isSet bool
}

func (v NullableGetRawBlockProof200Response) Get() *GetRawBlockProof200Response {
	return v.value
}

func (v *NullableGetRawBlockProof200Response) Set(val *GetRawBlockProof200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetRawBlockProof200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetRawBlockProof200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetRawBlockProof200Response(val *GetRawBlockProof200Response) *NullableGetRawBlockProof200Response {
	return &NullableGetRawBlockProof200Response{value: val, isSet: true}
}

func (v NullableGetRawBlockProof200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetRawBlockProof200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


