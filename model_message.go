/*
REST api to TON blockchain explorer

Provide access to indexed TON blockchain

API version: 2.0.0
Contact: support@tonkeeper.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tonapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the Message type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Message{}

// Message struct for Message
type Message struct {
	MsgType string `json:"msg_type"`
	CreatedLt int64 `json:"created_lt"`
	IhrDisabled bool `json:"ihr_disabled"`
	Bounce bool `json:"bounce"`
	Bounced bool `json:"bounced"`
	Value int64 `json:"value"`
	FwdFee int64 `json:"fwd_fee"`
	IhrFee int64 `json:"ihr_fee"`
	Destination *AccountAddress `json:"destination,omitempty"`
	Source *AccountAddress `json:"source,omitempty"`
	ImportFee int64 `json:"import_fee"`
	CreatedAt int64 `json:"created_at"`
	OpCode *string `json:"op_code,omitempty"`
	Init *StateInit `json:"init,omitempty"`
	Hash string `json:"hash"`
	// hex-encoded BoC with raw message body
	RawBody *string `json:"raw_body,omitempty"`
	DecodedOpName *string `json:"decoded_op_name,omitempty"`
	DecodedBody interface{} `json:"decoded_body,omitempty"`
}

type _Message Message

// NewMessage instantiates a new Message object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMessage(msgType string, createdLt int64, ihrDisabled bool, bounce bool, bounced bool, value int64, fwdFee int64, ihrFee int64, importFee int64, createdAt int64, hash string) *Message {
	this := Message{}
	this.MsgType = msgType
	this.CreatedLt = createdLt
	this.IhrDisabled = ihrDisabled
	this.Bounce = bounce
	this.Bounced = bounced
	this.Value = value
	this.FwdFee = fwdFee
	this.IhrFee = ihrFee
	this.ImportFee = importFee
	this.CreatedAt = createdAt
	this.Hash = hash
	return &this
}

// NewMessageWithDefaults instantiates a new Message object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMessageWithDefaults() *Message {
	this := Message{}
	return &this
}

// GetMsgType returns the MsgType field value
func (o *Message) GetMsgType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MsgType
}

// GetMsgTypeOk returns a tuple with the MsgType field value
// and a boolean to check if the value has been set.
func (o *Message) GetMsgTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MsgType, true
}

// SetMsgType sets field value
func (o *Message) SetMsgType(v string) {
	o.MsgType = v
}

// GetCreatedLt returns the CreatedLt field value
func (o *Message) GetCreatedLt() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.CreatedLt
}

// GetCreatedLtOk returns a tuple with the CreatedLt field value
// and a boolean to check if the value has been set.
func (o *Message) GetCreatedLtOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedLt, true
}

// SetCreatedLt sets field value
func (o *Message) SetCreatedLt(v int64) {
	o.CreatedLt = v
}

// GetIhrDisabled returns the IhrDisabled field value
func (o *Message) GetIhrDisabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IhrDisabled
}

// GetIhrDisabledOk returns a tuple with the IhrDisabled field value
// and a boolean to check if the value has been set.
func (o *Message) GetIhrDisabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IhrDisabled, true
}

// SetIhrDisabled sets field value
func (o *Message) SetIhrDisabled(v bool) {
	o.IhrDisabled = v
}

// GetBounce returns the Bounce field value
func (o *Message) GetBounce() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Bounce
}

// GetBounceOk returns a tuple with the Bounce field value
// and a boolean to check if the value has been set.
func (o *Message) GetBounceOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Bounce, true
}

// SetBounce sets field value
func (o *Message) SetBounce(v bool) {
	o.Bounce = v
}

// GetBounced returns the Bounced field value
func (o *Message) GetBounced() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Bounced
}

// GetBouncedOk returns a tuple with the Bounced field value
// and a boolean to check if the value has been set.
func (o *Message) GetBouncedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Bounced, true
}

// SetBounced sets field value
func (o *Message) SetBounced(v bool) {
	o.Bounced = v
}

// GetValue returns the Value field value
func (o *Message) GetValue() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *Message) GetValueOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *Message) SetValue(v int64) {
	o.Value = v
}

// GetFwdFee returns the FwdFee field value
func (o *Message) GetFwdFee() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.FwdFee
}

// GetFwdFeeOk returns a tuple with the FwdFee field value
// and a boolean to check if the value has been set.
func (o *Message) GetFwdFeeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FwdFee, true
}

// SetFwdFee sets field value
func (o *Message) SetFwdFee(v int64) {
	o.FwdFee = v
}

// GetIhrFee returns the IhrFee field value
func (o *Message) GetIhrFee() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.IhrFee
}

// GetIhrFeeOk returns a tuple with the IhrFee field value
// and a boolean to check if the value has been set.
func (o *Message) GetIhrFeeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IhrFee, true
}

// SetIhrFee sets field value
func (o *Message) SetIhrFee(v int64) {
	o.IhrFee = v
}

// GetDestination returns the Destination field value if set, zero value otherwise.
func (o *Message) GetDestination() AccountAddress {
	if o == nil || IsNil(o.Destination) {
		var ret AccountAddress
		return ret
	}
	return *o.Destination
}

// GetDestinationOk returns a tuple with the Destination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Message) GetDestinationOk() (*AccountAddress, bool) {
	if o == nil || IsNil(o.Destination) {
		return nil, false
	}
	return o.Destination, true
}

// HasDestination returns a boolean if a field has been set.
func (o *Message) HasDestination() bool {
	if o != nil && !IsNil(o.Destination) {
		return true
	}

	return false
}

// SetDestination gets a reference to the given AccountAddress and assigns it to the Destination field.
func (o *Message) SetDestination(v AccountAddress) {
	o.Destination = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *Message) GetSource() AccountAddress {
	if o == nil || IsNil(o.Source) {
		var ret AccountAddress
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Message) GetSourceOk() (*AccountAddress, bool) {
	if o == nil || IsNil(o.Source) {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *Message) HasSource() bool {
	if o != nil && !IsNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given AccountAddress and assigns it to the Source field.
func (o *Message) SetSource(v AccountAddress) {
	o.Source = &v
}

// GetImportFee returns the ImportFee field value
func (o *Message) GetImportFee() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ImportFee
}

// GetImportFeeOk returns a tuple with the ImportFee field value
// and a boolean to check if the value has been set.
func (o *Message) GetImportFeeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ImportFee, true
}

// SetImportFee sets field value
func (o *Message) SetImportFee(v int64) {
	o.ImportFee = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *Message) GetCreatedAt() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *Message) GetCreatedAtOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *Message) SetCreatedAt(v int64) {
	o.CreatedAt = v
}

// GetOpCode returns the OpCode field value if set, zero value otherwise.
func (o *Message) GetOpCode() string {
	if o == nil || IsNil(o.OpCode) {
		var ret string
		return ret
	}
	return *o.OpCode
}

// GetOpCodeOk returns a tuple with the OpCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Message) GetOpCodeOk() (*string, bool) {
	if o == nil || IsNil(o.OpCode) {
		return nil, false
	}
	return o.OpCode, true
}

// HasOpCode returns a boolean if a field has been set.
func (o *Message) HasOpCode() bool {
	if o != nil && !IsNil(o.OpCode) {
		return true
	}

	return false
}

// SetOpCode gets a reference to the given string and assigns it to the OpCode field.
func (o *Message) SetOpCode(v string) {
	o.OpCode = &v
}

// GetInit returns the Init field value if set, zero value otherwise.
func (o *Message) GetInit() StateInit {
	if o == nil || IsNil(o.Init) {
		var ret StateInit
		return ret
	}
	return *o.Init
}

// GetInitOk returns a tuple with the Init field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Message) GetInitOk() (*StateInit, bool) {
	if o == nil || IsNil(o.Init) {
		return nil, false
	}
	return o.Init, true
}

// HasInit returns a boolean if a field has been set.
func (o *Message) HasInit() bool {
	if o != nil && !IsNil(o.Init) {
		return true
	}

	return false
}

// SetInit gets a reference to the given StateInit and assigns it to the Init field.
func (o *Message) SetInit(v StateInit) {
	o.Init = &v
}

// GetHash returns the Hash field value
func (o *Message) GetHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Hash
}

// GetHashOk returns a tuple with the Hash field value
// and a boolean to check if the value has been set.
func (o *Message) GetHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Hash, true
}

// SetHash sets field value
func (o *Message) SetHash(v string) {
	o.Hash = v
}

// GetRawBody returns the RawBody field value if set, zero value otherwise.
func (o *Message) GetRawBody() string {
	if o == nil || IsNil(o.RawBody) {
		var ret string
		return ret
	}
	return *o.RawBody
}

// GetRawBodyOk returns a tuple with the RawBody field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Message) GetRawBodyOk() (*string, bool) {
	if o == nil || IsNil(o.RawBody) {
		return nil, false
	}
	return o.RawBody, true
}

// HasRawBody returns a boolean if a field has been set.
func (o *Message) HasRawBody() bool {
	if o != nil && !IsNil(o.RawBody) {
		return true
	}

	return false
}

// SetRawBody gets a reference to the given string and assigns it to the RawBody field.
func (o *Message) SetRawBody(v string) {
	o.RawBody = &v
}

// GetDecodedOpName returns the DecodedOpName field value if set, zero value otherwise.
func (o *Message) GetDecodedOpName() string {
	if o == nil || IsNil(o.DecodedOpName) {
		var ret string
		return ret
	}
	return *o.DecodedOpName
}

// GetDecodedOpNameOk returns a tuple with the DecodedOpName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Message) GetDecodedOpNameOk() (*string, bool) {
	if o == nil || IsNil(o.DecodedOpName) {
		return nil, false
	}
	return o.DecodedOpName, true
}

// HasDecodedOpName returns a boolean if a field has been set.
func (o *Message) HasDecodedOpName() bool {
	if o != nil && !IsNil(o.DecodedOpName) {
		return true
	}

	return false
}

// SetDecodedOpName gets a reference to the given string and assigns it to the DecodedOpName field.
func (o *Message) SetDecodedOpName(v string) {
	o.DecodedOpName = &v
}

// GetDecodedBody returns the DecodedBody field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Message) GetDecodedBody() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.DecodedBody
}

// GetDecodedBodyOk returns a tuple with the DecodedBody field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Message) GetDecodedBodyOk() (*interface{}, bool) {
	if o == nil || IsNil(o.DecodedBody) {
		return nil, false
	}
	return &o.DecodedBody, true
}

// HasDecodedBody returns a boolean if a field has been set.
func (o *Message) HasDecodedBody() bool {
	if o != nil && !IsNil(o.DecodedBody) {
		return true
	}

	return false
}

// SetDecodedBody gets a reference to the given interface{} and assigns it to the DecodedBody field.
func (o *Message) SetDecodedBody(v interface{}) {
	o.DecodedBody = v
}

func (o Message) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Message) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["msg_type"] = o.MsgType
	toSerialize["created_lt"] = o.CreatedLt
	toSerialize["ihr_disabled"] = o.IhrDisabled
	toSerialize["bounce"] = o.Bounce
	toSerialize["bounced"] = o.Bounced
	toSerialize["value"] = o.Value
	toSerialize["fwd_fee"] = o.FwdFee
	toSerialize["ihr_fee"] = o.IhrFee
	if !IsNil(o.Destination) {
		toSerialize["destination"] = o.Destination
	}
	if !IsNil(o.Source) {
		toSerialize["source"] = o.Source
	}
	toSerialize["import_fee"] = o.ImportFee
	toSerialize["created_at"] = o.CreatedAt
	if !IsNil(o.OpCode) {
		toSerialize["op_code"] = o.OpCode
	}
	if !IsNil(o.Init) {
		toSerialize["init"] = o.Init
	}
	toSerialize["hash"] = o.Hash
	if !IsNil(o.RawBody) {
		toSerialize["raw_body"] = o.RawBody
	}
	if !IsNil(o.DecodedOpName) {
		toSerialize["decoded_op_name"] = o.DecodedOpName
	}
	if o.DecodedBody != nil {
		toSerialize["decoded_body"] = o.DecodedBody
	}
	return toSerialize, nil
}

func (o *Message) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"msg_type",
		"created_lt",
		"ihr_disabled",
		"bounce",
		"bounced",
		"value",
		"fwd_fee",
		"ihr_fee",
		"import_fee",
		"created_at",
		"hash",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMessage := _Message{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMessage)

	if err != nil {
		return err
	}

	*o = Message(varMessage)

	return err
}

type NullableMessage struct {
	value *Message
	isSet bool
}

func (v NullableMessage) Get() *Message {
	return v.value
}

func (v *NullableMessage) Set(val *Message) {
	v.value = val
	v.isSet = true
}

func (v NullableMessage) IsSet() bool {
	return v.isSet
}

func (v *NullableMessage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessage(val *Message) *NullableMessage {
	return &NullableMessage{value: val, isSet: true}
}

func (v NullableMessage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


