/*
REST api to TON blockchain explorer

Provide access to indexed TON blockchain

API version: 2.0.0
Contact: support@tonkeeper.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tonapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TonConnectProofRequestProofDomain type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TonConnectProofRequestProofDomain{}

// TonConnectProofRequestProofDomain struct for TonConnectProofRequestProofDomain
type TonConnectProofRequestProofDomain struct {
	LengthBytes *int32 `json:"length_bytes,omitempty"`
	Value string `json:"value"`
}

type _TonConnectProofRequestProofDomain TonConnectProofRequestProofDomain

// NewTonConnectProofRequestProofDomain instantiates a new TonConnectProofRequestProofDomain object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTonConnectProofRequestProofDomain(value string) *TonConnectProofRequestProofDomain {
	this := TonConnectProofRequestProofDomain{}
	this.Value = value
	return &this
}

// NewTonConnectProofRequestProofDomainWithDefaults instantiates a new TonConnectProofRequestProofDomain object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTonConnectProofRequestProofDomainWithDefaults() *TonConnectProofRequestProofDomain {
	this := TonConnectProofRequestProofDomain{}
	return &this
}

// GetLengthBytes returns the LengthBytes field value if set, zero value otherwise.
func (o *TonConnectProofRequestProofDomain) GetLengthBytes() int32 {
	if o == nil || IsNil(o.LengthBytes) {
		var ret int32
		return ret
	}
	return *o.LengthBytes
}

// GetLengthBytesOk returns a tuple with the LengthBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TonConnectProofRequestProofDomain) GetLengthBytesOk() (*int32, bool) {
	if o == nil || IsNil(o.LengthBytes) {
		return nil, false
	}
	return o.LengthBytes, true
}

// HasLengthBytes returns a boolean if a field has been set.
func (o *TonConnectProofRequestProofDomain) HasLengthBytes() bool {
	if o != nil && !IsNil(o.LengthBytes) {
		return true
	}

	return false
}

// SetLengthBytes gets a reference to the given int32 and assigns it to the LengthBytes field.
func (o *TonConnectProofRequestProofDomain) SetLengthBytes(v int32) {
	o.LengthBytes = &v
}

// GetValue returns the Value field value
func (o *TonConnectProofRequestProofDomain) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *TonConnectProofRequestProofDomain) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *TonConnectProofRequestProofDomain) SetValue(v string) {
	o.Value = v
}

func (o TonConnectProofRequestProofDomain) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TonConnectProofRequestProofDomain) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LengthBytes) {
		toSerialize["length_bytes"] = o.LengthBytes
	}
	toSerialize["value"] = o.Value
	return toSerialize, nil
}

func (o *TonConnectProofRequestProofDomain) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"value",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTonConnectProofRequestProofDomain := _TonConnectProofRequestProofDomain{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTonConnectProofRequestProofDomain)

	if err != nil {
		return err
	}

	*o = TonConnectProofRequestProofDomain(varTonConnectProofRequestProofDomain)

	return err
}

type NullableTonConnectProofRequestProofDomain struct {
	value *TonConnectProofRequestProofDomain
	isSet bool
}

func (v NullableTonConnectProofRequestProofDomain) Get() *TonConnectProofRequestProofDomain {
	return v.value
}

func (v *NullableTonConnectProofRequestProofDomain) Set(val *TonConnectProofRequestProofDomain) {
	v.value = val
	v.isSet = true
}

func (v NullableTonConnectProofRequestProofDomain) IsSet() bool {
	return v.isSet
}

func (v *NullableTonConnectProofRequestProofDomain) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTonConnectProofRequestProofDomain(val *TonConnectProofRequestProofDomain) *NullableTonConnectProofRequestProofDomain {
	return &NullableTonConnectProofRequestProofDomain{value: val, isSet: true}
}

func (v NullableTonConnectProofRequestProofDomain) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTonConnectProofRequestProofDomain) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


